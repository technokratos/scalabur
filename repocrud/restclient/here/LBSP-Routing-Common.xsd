<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.navteq.com/lbsp/Routing-Common/4" xmlns:common="http://www.navteq.com/lbsp/Common/4" targetNamespace="http://www.navteq.com/lbsp/Routing-Common/4" version="4.8">
	<xs:import namespace="http://www.navteq.com/lbsp/Common/4" schemaLocation="LBSP-Common.xsd"/>
	<xs:import namespace="http://www.navteq.com/lbsp/Errors/1" schemaLocation="LBSP-Errors.xsd"/>
	<xs:complexType name="RouteType">
		<xs:annotation>
			<xs:documentation>A Route describes a distinct path through the route network covering two or more waypoints.
It consists of route legs each of them covering the section between two waypoints.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RouteId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique identifier of the route. The RouteId is calculated from the route links and can be used to reproduce any previously calculated route.
					Thus, the RouteId is not a temporary ID, but can be used as semi-persistent reference to the route. Itâ€™s valid also with new version of the map, unless the map data along the route is changed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Waypoint" type="WaypointType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of waypoints that have been defined when requesting for a route calculation.
The first waypoint is defined as the start of the route; the last waypoint marks the destination. Any points in between the two define via points.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Mode" type="RoutingModeType">
				<xs:annotation>
					<xs:documentation>Settings for route calculation. One mode can be specified for each route. (see RoutingModeType)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape" type="common:GeoPolylineType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shape of the route as a polyline. The accuracy might depend on the resolution specified in mpp (meters per pixel) when requesting the route.

In some use cases (like web portals), only the route's shape is required without the nested structure of a route and detailed knowledge of the links and LinkIds. In this case, the shape does not need to be acquired by traversing the route's links, but can be represented using this attribute at route level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BoundingBox" type="common:GeoBoundingBoxType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Bounding Box of the route.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Leg" type="RouteLegType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Partition of the route into legs between the different waypoints. (see RouteLegType)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PublicTransportLine" type="PublicTransportLineType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of all public transport lines which are used by public transport links and maneuvers of the route. (see PublicTransportLineType)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PublicTransportTickets" type="PublicTransportTicketsType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of all ticket options available for this route. Each option is a list of tickets for individual maneuvers on the route.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Note" type="RouteNoteType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Notes that are either related to the calculation (violated routing options) or that refer the route as a whole. In addition to these notes additional notes can be attached to maneuvers. The maneuver notes are usually related to the route segment following the maneuver and would be of interest when passing this segment. (see RouteNoteType)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Summary" type="RouteSummaryType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Overall route distance and time summary. (see RouteSummaryType)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SummaryByCountry" type="RouteSummaryByCountryType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Route distance and time summary per traversed country.  (see RouteSummaryByCountryType)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Generalization" type="GeneralizationType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A polyline obtained by applying simplification algorithms to a base polyline, with a given tolerance parameter, to reduce the number of points. The points in the base polyline are implicitly referenced by index.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ManeuverGroup" type="ManeuverGroupType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Partition of the route into groups of Maneuvers using the same transport type.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Incident" type="IncidentType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="Label" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Unique names within a route used to distinguish between alternative routes. They can be city names, road names or something else that makes the distinction possible.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Zone" type="RoutingZoneType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="TimeDependentRestriction" type="TimeDependentRestrictionType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of time dependent restrictions on the route except truck specific restrictions. Truck specific restrictions are being provided in TruckRestrictions element of PrivateTransportLinkType.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RouteSummaryType">
		<xs:annotation>
			<xs:documentation>Summary of the route.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Distance" type="common:DistanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Total travel distance</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TrafficTime" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Total travel time considering traffic</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BaseTime" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Total travel time not considering traffic but taking the transport mode into account.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Flags" type="RouteLinkFlagType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Special link characteristics (like ferry or motorway usage) which are covered by the route</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Entries" type="RouteSummaryEntryType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>&#xA;&lt;i&gt;Note: not yet supported&lt;/i&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Text" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Textual description of the route summary in the language requested by the user, e.g. "The trip takes 7.5 miles and 13 min."</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdditionalData" type="common:KeyValuePairType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Container for additional summary information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TravelTime" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Total travel time optionally considering traffic depending on the request parameters</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CostFactor" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>An internal cost used for calculating the route. This value is based on the objective function of the routing engine and related to the distance or time, depending on the request settings (e.g. pedestrian versus car routes). The value may include certain penalties and represents the overall quality of the route with respect to the input parameters. Computing the CostFactor value is computationally less expensive compared to calculating distance and/or time. Especially for computing matrix routes and 1:n routes this value is preferred over distance or travel time, as it allows computing responses in much less time. CostFactor is also the preferred metric for comparing multiple routes e.g. for doing trip planning (traveling salesman problem) based on the response of a matrix route calculation. If time and distance is required for only a subset of a matrix route response, it is recommended to query for distance and time seperately, instead of requesting these values directly for a matrix request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Co2Emission" type="common:VolumeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Estimation of the carbon dioxyde emmision for the given Route. The value depends on the
					AverageConsumption request parameter for setting the average fuel consumption per 100 km and the type of combustion engine (diesel or gasoline).
					Unit is kilograms.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Consumption" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Energy or fuel consumed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RouteId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique identifier of the route. The RouteId is calculated from the route links and can be used to reproduce the route. Thus, the RouteId is not a temporary ID, but can be used as semi-persistent reference to the route. Route id is valid with the same map version. For other map versions validity is not guaranteed.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="EngineType">
		<xs:annotation>
			<xs:documentation>Defines identifiers for different engine types.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="diesel"/>
			<xs:enumeration value="gasoline"/>
			<xs:enumeration value="electric"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ShapeQualityType">
		<xs:annotation>
			<xs:documentation>Defines identifiers for different shape quality.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="exact">
				<xs:annotation>
					<xs:documentation>Shape mostly matches map data with possible rare deviations.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="coarse">
				<xs:annotation>
					<xs:documentation>Shape is inaccurate, i.e. might be point to point.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="VehicleType">
		<xs:annotation>
			<xs:documentation>Contains vehicle specific information like type of engine and average fuel consumption, which can be used to estimate e.g. CO2 emission.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Engine" type="EngineType">
				<xs:annotation>
					<xs:documentation>The type of the engine used. Can be either diesel, gasoline or electric</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AverageConsumption" type="xs:double">
				<xs:annotation>
					<xs:documentation>The average fuel consumption for combustion engines, measured in liters per 100km.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RouteSummaryByCountryType">
		<xs:annotation>
			<xs:documentation>Summary for a country</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="RouteSummaryType">
				<xs:sequence>
					<xs:element name="Country" type="common:CountryCodeType">
						<xs:annotation>
							<xs:documentation>Country code</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TollRoadDistance" type="common:DistanceType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Total distance of toll roads within the route per country</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RouteSummaryEntryType">
		<xs:annotation>
			<xs:documentation>A route summary contains a rough description of the route limited to the essential streets and maneuvers. Each of these maneuvers/routes is described in a route summary entry.&#xA;&lt;i&gt;Note: not yet supported&lt;/i&gt;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Label" type="xs:string">
				<xs:annotation>
					<xs:documentation>Textual description of the summary entry.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Distance" type="common:DistanceType">
				<xs:annotation>
					<xs:documentation>Travel distance for the part of the route represented by the summary entry.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PublicTransportRouteSummaryType">
		<xs:annotation>
			<xs:documentation>Summary for a Public Transport Route </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="RouteSummaryType">
				<xs:sequence>
					<xs:element name="Departure" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation>Start date and time of the route.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TravelTime" type="common:DurationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Total travel time in minutes. -1 indicates information is not available.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NumberOfChanges" type="xs:integer" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Number of changes. This equals the number of segments â€“ 1.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="WalkTime" type="common:DurationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Total walk time in seconds. -1 indicates information is not available.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="WaitTime" type="common:DurationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Total wait time in seconds. -1 indicates information is not available.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TimePrognosis" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Free form text indicating on-time or delay. Examples: on time, delayed, 5 min late.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DelayReason" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reason for delay in free text form.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RouteQualifier" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Qualification of the route: lastRoute, fastestRoute, shortestWalk.  Values are only published when known.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:list itemType="RouteQualifierType"/>
						</xs:simpleType>
					</xs:element>
					<xs:element name="TransportTypes" minOccurs="0">
						<xs:annotation>
							<xs:documentation>TransportTypes that need to be used on this this route.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:list itemType="PublicTransportTypeType"/>
						</xs:simpleType>
					</xs:element>
					<xs:element name="TimetableExpiration" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Expiration time of timetable used for route computation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PublicTransportFlags" type="PublicTransportFlagType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Summarizes special characteristics of the public transport sections of this route.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="WaypointType">
		<xs:annotation>
			<xs:documentation>A waypoint can represent both a position exactly specified by LinkId as well as the result of a map matching.
In the first case the mappedPosition attribute will not be filled.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LinkId" type="common:LinkIdType">
				<xs:annotation>
					<xs:documentation>Id of the link which covers the waypoint.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MappedPosition" type="common:GeoCoordinateType">
				<xs:annotation>
					<xs:documentation>The nearest point on the link to the original position</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OriginalPosition" type="common:GeoCoordinateType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Original position as it was specified in the corresponding request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="WaypointParameterTypeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the type (stop over/pass through) of the waypoint.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StopId" type="common:TransitStopIdType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>DiscoverCities StopId of the Public Transport Stop as specified  in the corresponding request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatchQuality" type="xs:float" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the quality of the map matching results. The match quality is a value between 0.0 and 1.0, 1.0 representing a 100% match.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Spot" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Relative position of the mapped location along the link. Spot is defined as the fractional distance from the link's reference-node to the non-reference node, i.e. the value range is between 0 and 1. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SideOfStreet" type="common:SideOfStreetType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates whether the waypoint is on the left or right side of the link (if heading from the reference node to the non-reference node).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MappedRoadName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of the street to which the request waypoint was mapped</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A label identifying this waypoint, generated by the routing service. Depending on the transport mode this can be a street name or road name in case of a private transport based route or the name of a public transport stop in case of a route based on public transportation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserLabel" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A label identifying this waypoint, as specified in the request. In contrast to the &quot;Label&quot; field, this entry is copied verbatim from the waypoint parameters contained in the corresponding routing request. The &quot;UserLabel&quot; field can be used to identify a waypoint with a user-chosen name.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EntityType" type="WaypointParameterEntityTypeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the entity type (airport, intersection or full address) of this waypoint. The entity type is optional and may be omitted waypoints where the information is not required.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EntityDetails" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the details of the entity (e.g. name of the intersection, full address details) of the waypoint.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShapeIndex" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specifies the index of this waypoint in the shape array. The index provided will be pointing into the global shape array provided on Route Level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Source" type="WaypointParameterSourceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines if the waypoint was specified by the user or added by the route calculation.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RoutingModeType">
		<xs:annotation>
			<xs:documentation>The routing mode encapsulates the parameters for one route calculation.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Type" type="RoutingTypeType">
				<xs:annotation>
					<xs:documentation>Routing type relevant for this calculation, e.g. "DirectDrive", "FastestNow", "Shortest" (see &lt;b&gt;RoutingType &lt;/b&gt;for supported values)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransportModes" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Transport mode relevant for this calculation, e.g. "Car", "Truck", "Pedestrian" (see &lt;b&gt;TransportMode &lt;/b&gt;for supported values)</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="TransportModeType"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TrafficMode" type="TrafficModeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Traffic mode relevant for this calculation, e.g. "enabled", "disabled", "default" (see &lt;b&gt;TrafficMode &lt;/b&gt;for supported values)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Feature" type="WeightedRouteFeatureType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Routing Options to be applied when calculating the route.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RouteLegType">
		<xs:annotation>
			<xs:documentation>A RouteLeg defines the portion of a route between two way points.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Start" type="WaypointType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Route waypoint that is located at the start of this route leg. This waypoint matches one of the waypoints in the Route.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="End" type="WaypointType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Route waypoint that is located at the end of this route leg. This waypoint matches one of the waypoints in the Route.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Length" type="common:DistanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Length of the leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TravelTime" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Time needed to travel along this route leg. Depending on the routing type traffic information is considered in this value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Maneuver" type="ManeuverType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of all maneuvers which are included in this portion of the route.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Link" type="RouteLinkType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of all links which are included in this portion of the route.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BoundingBox" type="common:GeoBoundingBoxType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Bounding Box of the leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape" type="common:GeoPolylineType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shape of the route leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:sequence>
				<xs:element name="FirstPoint" type="xs:int" minOccurs="0">
					<xs:annotation>
						<xs:documentation>index into the geometry array, pointing to the first point of the shape subsegment associated with this Leg.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="LastPoint" type="xs:int" minOccurs="0">
					<xs:annotation>
						<xs:documentation>index into the geometry array, pointing to the last point of the shape subsegment associated with this Leg.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:element name="TrafficTime" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Time required for this route leg, taking traffic into account.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BaseTime" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Time required for this route leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StayingTime" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Time spent staying at the end of the leg. This can be either the waiting time specified by the user or the charging time, if this leg ends at a charging station. In case there are multiple possibilities, the maximum time is reported. StayingTime is included in TrafficTime and BaseTime</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ArrivalBatteryCharge" type="BatteryChargeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Estimated battery charge when reaching the end of the leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TargetBatteryCharge" type="BatteryChargeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>In case this leg ends at a charging station and it is reachable with sufficient remaining charge, this value specifies the level to which the user should charge at the charging station. Otherwise this value is same as ArrivalBatteryCharge</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Summary" type="RouteSummaryType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Route leg distance and time summary. (see RouteSummaryType)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubLegSummary" type="RouteSummaryType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Contains summaries for all sub legs of this leg. Sub legs are implicitly defined by the usage of passThrough waypoints. Such waypoints do not lead to the creation of explicit route legs. The LegSummaries can be used to obtain further details on such implicit legs. If this leg does not contain any passThrough waypoints, there are now sub legs either, so this list will remain empty.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ManeuverType" abstract="true">
		<xs:annotation>
			<xs:documentation>A maneuver describes the action needed to leave a street segment and enter the next link following the route. This type is an abstract base class for PrivateTransportManeuver and PublicTransportManeuver and only includes most common attributes which every maneuver type provides.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Position" type="common:GeoCoordinateType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Position where the maneuver starts.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Instruction" type="xs:string">
				<xs:annotation>
					<xs:documentation>Textual instruction describing the required maneuver like&lt;b&gt; &lt;/b&gt;"Turn left onto Minna St." The format of the instruction (text/html) depends on format selected in the representation options.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PlaceEquipment" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of obstacles at the maneuver.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="PlaceEquipmentType"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TravelTime" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Travel time needed for the segment following this maneuver until the next maneuver. Depending on the routing type traffic information is considered in this value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Length" type="common:DistanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Length of the segment following this maneuver until the next maneuver.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape" type="common:GeoPolylineType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shape of the route segment following this maneuver until the next maneuver as a polyline.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:sequence>
				<xs:element name="FirstPoint" type="xs:int" minOccurs="0">
					<xs:annotation>
						<xs:documentation>index into the geometry array, pointing to the first point of the shape subsegment associated with this Maneuver</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="LastPoint" type="xs:int" minOccurs="0">
					<xs:annotation>
						<xs:documentation>index into the geometry array, pointing to the last point of the shape subsegment associated with this Maneuver</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:element name="Time" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Point in time when this maneuver is supposed to take place. For public transport maneuvers the time denotes the arrival or departure time according to the line's schedule. For private transport routes that have been calculated based on an explicit arrival or departure time the time denotes the predicted time of the maneuver.
The time information is given in the time zone of the maneuver's position.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Note" type="RouteNoteType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Additional information about the route segment following the maneuver, e.g. "sharp curve ahead", "accessing toll road", etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NextManeuver" type="common:ElementReferenceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the next maneuver on the recommended route.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToLink" type="common:LinkIdType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The key of the next (outgoing) link.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BoundingBox" type="common:GeoBoundingBoxType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Bounding Box of the Maneuver.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShapeQuality" type="ShapeQualityType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shape quality between current maneuver and the next one.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="common:ElementReferenceType" use="required">
			<xs:annotation>
				<xs:documentation>Key that identifies this maneuver element uniquely within the response.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="FerryType">
		<xs:annotation>
			<xs:documentation>Defines the possible types of ferry.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="railFerry"/>
			<xs:enumeration value="boatFerry"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="PrivateTransportManeuverType">
		<xs:annotation>
			<xs:documentation>This type represents a maneuver relevant for private transport such as car, truck, pedestrian. This type is derived from the abstract typeManueverType.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ManeuverType">
				<xs:sequence>
					<xs:element name="Direction" type="DirectionType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Maneuver direction hint. Please refer to the enumeration type &lt;b&gt;Direction &lt;/b&gt;for supported values.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Action" type="PrivateTransportActionType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Code that identifies the action for this maneuver. Please refer to the enumeration type &lt;b&gt;PrivateTransportAction&lt;/b&gt; for supported values.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RoadName" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of the road the maneuver where the maneuver starts</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SignPost" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of the direction(s) as they are given on the sign indicating the way the user has to follow</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NextRoadName" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of the next road the maneuver is heading for.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RoadNumber" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Number of the road where the maneuver starts (e.g. A5, B49, etc.)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NextRoadNumber" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Number of the road (e.g. A5, B49, etc.) the maneuver is heading for.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Lane" type="RouteLaneType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>List of lanes at maneuver position; each lane supporting a single line of vehicles.&#xA;&lt;i&gt;Note: not yet supported&lt;/i&gt;</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SelectedLanes" minOccurs="0">
						<xs:annotation>
							<xs:documentation>List of lanes which can be used for this maneuver. Lanes are references by their list index strating at index 0.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:list itemType="xs:int"/>
						</xs:simpleType>
					</xs:element>
					<xs:element name="RoadTemplate" type="ExternalResourceType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>External SVG resource that provides a template for displaying the route (e.g. A5, B49, etc.). It is the client's responsibility to add the route name into the template to create the correct image for the maneuver.&#xA;&lt;i&gt;Note: not yet supported&lt;/i&gt;</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NavigationSignPost" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of the street as given on the sign post but limited to the context of the route.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="IntersectionIcon" type="IntersectionIconType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Representation of the intersection icon</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="FreewayExit" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of the freeway exit to be taken at the maneuver.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="FreewayJunction" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of the freeway junction the maneuver is taken place.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TrafficTime" type="common:DurationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Time required for this maneuver and for passing the next segment, taking traffic into account. This value may include penalties due to the maneuver (e.g. on left-turns or U-turns).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BaseTime" type="common:DurationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Time required for this maneuver and for passing the next segment. This value may include penalties due to the maneuver (e.g. on left-turns or U-turns).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RoadShield" type="RoadShieldType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Road shield information which can be used to look up a visual representation of the road shield corresponding to this maneuver.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StartAngle" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Specifies the starting angle for the segment following this maneuver. Unit is degrees. An angle of 0 represents directon north and angle of 90 degrees represents direction west.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="FerryType" type="FerryType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Type of ferry to distinguish between boat and rail ferry for maneuvers with ferry action in vehicle transport mode.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RoadShieldType">
		<xs:annotation>
			<xs:documentation>Contains information used to look up road shield imagery.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Region" type="xs:string">
				<xs:annotation>
					<xs:documentation>A string identifying the region where this road shield is used. This may be used to differentiate roadshield images by country.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Category" type="xs:string">
				<xs:annotation>
					<xs:documentation>A string identifying the category of the road shield, such as highways.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label" type="xs:string">
				<xs:annotation>
					<xs:documentation>A Label identfying the inscription on the road shield, e.g. containing the road number</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RouteLaneType">
		<xs:annotation>
			<xs:documentation>A link can consist of multiple lanes; each supporting a single line of vehicles.&#xA;&lt;i&gt;Note: not yet supported&lt;/i&gt;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Direction" type="DirectionType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of directions that are allowed on the link. This corresponds to the arrows usually given on the road.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RouteNoteType">
		<xs:annotation>
			<xs:documentation>Route notes are used to store additional information about the route. These notes can either be related to the calculation itself (like violated routing options)  or to the characteristics of the route (like entering a toll road, passing a border, etc.).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Type" type="RouteNoteTypeType">
				<xs:annotation>
					<xs:documentation>Type of the note. Please refer to the enumeration type RouteNoteTypeType for available values.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Code" type="RouteNoteCodeType">
				<xs:annotation>
					<xs:documentation>A code that uniquely identifies the note. This code can be used to decide how to display the note (e.g. with a warning icon). Please refer to the enumeration type RouteNoteCode for available values.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Text" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A short text describing the note. Please note that this attribute is not subject to internationalization and should therefore not be used in user displays.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Position" type="common:GeoCoordinateType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Position at which the note is relevant.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinkIds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Location at which the note is relevant given by a list of linkIds.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="common:LinkIdType"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ValidityPeriod" type="common:PeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Validity period of the note. This attribute is used to specify time dependent restrictions (e.g. "road is closed during winter").</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdditionalData" type="common:KeyValuePairType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Container for additional data to be stored along with the note</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CountryChangeDetails" type="CountryChangeDetailsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Details of the country change. Available only in case of country change notes (see RouteNoteCodeType).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CountryChangeDetailsType">
		<xs:annotation>
			<xs:documentation>Details of the country change.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ToCountry" type="common:CountryCodeType">
				<xs:annotation>
					<xs:documentation>Country code of country being entered</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PublicTransportManeuverType">
		<xs:annotation>
			<xs:documentation>This type represents a maneuver relevant for public transport such as bus, train. This type is derived from the abstract type ManueverType.
Two different types of public transport maneuvers are supported: "Enter" and "Leave" (see enumeration type &lt;b&gt;PublicTransportAction&lt;/b&gt;). A direct change between two transport lines will be represented with two maneuvers: one for the action "Leave" and a subsequent one to "Enter" the next transport line.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ManeuverType">
				<xs:sequence>
					<xs:element name="Action" type="PublicTransportActionType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifier for the action to be performed at this maneuver</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StopName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Name of the stop where the user has to leave (action == "Leave") or enter (action == "Enter") the transport line.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DeparturePlatform" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Platform name where the transport line departs from the station. Only applicable
							for maneuvers where action is "enter" or "change".</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ArrivalPlatform" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Platform name where the transport line arrives at the station. Only applicable
							for maneuvers where action is "leave" or "change".</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PlatformLevel" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Platform level where the transport line stops (action == "Leave") or starts from (action == "Enter"). In case action == "Change" the platform level from which the transport line starts from is provided in this field.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Line" type="common:ElementReferenceType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference key to the PublicTransportLine object. To reduce data volume, the PublicTransport element is not directly embedded in the ManeuverType object, but is swapped out into the Route element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ToLine" type="common:ElementReferenceType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference key to the PublicTransportLine object for the target line. This element is only provided in case of a "change" Maneuver (action == "Change" and if returning of "change" maneuvers has been requested using the "CombineChange" flag in PublicTransportProfile . To reduce data volume, the PublicTransport element is not directly embedded in the ManeuverType object, but is swapped out into the Route element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StopId" type="common:TransitStopIdType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Permanent DiCi Id of the Transit Stop where the user has to leave (action == "Leave") or enter (action == "Enter") the transport line. This id is related to the Discover Cities Database.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AccessPointName" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of the Access Point where the user has to enter or leave the public transport station. Only published when the name of the access point differs from the stopname.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AccessPointId" type="common:TransitAccessIdType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Permanent Id for the Access Point based on DiCi data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NextRoadName" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of the road towards which the exit should be taken for Action=leave.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="WaitTime" type="common:DurationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Total wait time for this public transport maneuver. -1 indicates information is not available.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TimeEstimatePrecision" type="common:DurationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>When a public transport leg contains estimated times, this value contains the maximum deviation possible.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Ticket" type="common:ElementReferenceType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Which ticket covers the journey started by this maneuver. Note: multiple maneuvers can be covered by the same ticket. Only valid for enter and change maneuvers when fare information is provided.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ArrivalDelay" type="common:DurationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Arrival delay for a public transport maneuver. Negative values indicate that the public transport arrives earlier than scheduled.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DepartureDelay" type="common:DurationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Departure delay for a public transport maneuver. Negative values indicate that the public transport departs earlier than scheduled.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PublicTransportTicketsType">
		<xs:annotation>
			<xs:documentation>Defines the information available for public transport tickets required along the route.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PublicTransportTicket" type="PublicTransportTicketType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A list of tickets required for all legs of the route for which we have ticketing information.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="common:ElementReferenceType" use="required">
			<xs:annotation>
				<xs:documentation>Unique internal identifier for this group of tickets.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="PublicTransportTicketType">
		<xs:annotation>
			<xs:documentation>Defines the information available for public transport tickets required along the route.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TicketName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the ticket in the local transport system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Currency" type="common:CurrencyType">
				<xs:annotation>
					<xs:documentation>Which currency the ticket cost is in.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Price" type="xs:float">
				<xs:annotation>
					<xs:documentation>Price of a single ticket</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="common:ElementReferenceType" use="required">
			<xs:annotation>
				<xs:documentation>Unique internal identifier for this ticket</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ManeuverGroupType">
		<xs:annotation>
			<xs:documentation>A group of maneuvers using the same transport type. This type is especially useful for multi modal routes.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FirstManeuver" type="common:ElementReferenceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the first maneuver of this maneuver group.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastManeuver" type="common:ElementReferenceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the last maneuver of this maneuver group.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Mode" type="TransportModeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Transport mode used for this maneuver group.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PublicTransportType" type="PublicTransportTypeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Transport type for public transport groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SummaryDescription" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Textual description as a summary for this maneuver group in free text form.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ArrivalDescription" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Textual description for the arrival part of this maneuver group in free text form.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WaitDescription" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Textual description for the required waiting time for this maneuver group.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Summary" type="RouteSummaryType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Summary for the given ManeuverGroup</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GeneralizationType">
		<xs:annotation>
			<xs:documentation>A polyline obtained by applying simplication algorithms to a base polyline, with a given tolerance parameter,
			to reduce the number of points. The points in the base polyline are implicitly referenced by index.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Tolerance" type="xs:double">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:element>
			<xs:element name="Index" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indices for the given generalization tolerance, pointing to the indices of the coordinates in the global shapes array</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="xs:int"/>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RouteLinkType" abstract="true">
		<xs:annotation>
			<xs:documentation>A link is an edge in the routing network. This type is an abstract base class for PrivateTransportLink and PublicTransportLink and only includes most common attributes which every link type provides.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LinkId" type="common:LinkIdType">
				<xs:annotation>
					<xs:documentation>The unique Identifier of a NAVTEQ Link.
The sign indicates weather the link is driven/walked from reference node to node (&amp;lt;no sign&amp;gt;) or from node to reference node (-).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape" type="common:GeoPolylineType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shape of the link. (see PolylineType)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:sequence>
				<xs:element name="FirstPoint" type="xs:int" minOccurs="0">
					<xs:annotation>
						<xs:documentation>index into the geometry array, pointing to the first point of the shape subsegment associated with this link</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="LastPoint" type="xs:int" minOccurs="0">
					<xs:annotation>
						<xs:documentation>index into the geometry array, pointing to the last point of the shape subsegment associated with this link</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:element name="Length" type="common:DistanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Length of the link in meters.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RemainDistance" type="common:DistanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Distance from the start of this link until the destination is reached.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RemainTime" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Predicted time needed from the start of this link until the destination will be reached. Traffic information is taken into account if the user is authorized to use traffic information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdditionalData" type="common:KeyValuePairType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Generic container to store additional information</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NextLink" type="common:LinkIdType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the next link on the recommended route.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Maneuver" type="common:ElementReferenceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the maneuver which needs to take place at the end of the link.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimeDependentRestrictionRef" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indices of time dependent restrictions on route which apply on this link.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="xs:int"/>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PrivateTransportLinkType">
		<xs:annotation>
			<xs:documentation>A private transport link is a link traversed in a route using private transport as car, truck, pedestrian, etc.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="RouteLinkType">
				<xs:sequence>
					<xs:element name="SpeedLimit" type="common:SpeedType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Legal speed limit (as static speed information associated with the link independent of the vehicle type)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DynamicSpeedInfo" type="DynamicSpeedInfoType" minOccurs="0"/>
					<xs:element name="ExternalResource" type="ExternalResourceType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Series of references to external resources (e.g. bitmaps). The client is responsible for downloading the referenced resource.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Flags" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Flags that describe special characteristics of the link like "motorway", "tollroad", "ferry", etc. (see LinkFlag enumeration for possible values)</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:list itemType="RouteLinkFlagType"/>
						</xs:simpleType>
					</xs:element>
					<xs:element name="FreewayExit" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of the freeway exit the link is passing</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="FreewayJunction" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of the freeway junction the link is passing</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TMCCodes" minOccurs="0">
						<xs:annotation>
							<xs:documentation>List of TMCCodes that cover the link.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:list itemType="common:TMCCodeType"/>
						</xs:simpleType>
					</xs:element>
					<xs:element name="FunctionalClass" type="common:FunctionalClassType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The functional class assigned to the link.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Address" type="common:AddressType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Address of the street the link is passing</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RoadNumber" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Number of the road (e.g. A5, B49, etc.) the link is passing</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Timezone" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Timezone (including information about daylight saving) the link is located in.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Incident" type="IncidentType" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="CorridorLevel" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The corridor level defines a logical distance from the base route. Any time a "faulty" maneuver is detected the level is increased by 1. The base route has a constant corridor level of 0.&#xA;&lt;i&gt;Note: not yet supported&lt;/i&gt;</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Stubs" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference keys to other links within the corridor, which are not part of the recommended route, but can be entered from this link.&#xA;&lt;i&gt;Note: not yet supported&lt;/i&gt;</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:list itemType="common:LinkIdType"/>
						</xs:simpleType>
					</xs:element>
					<xs:element name="NavigationFlags" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Flags that describe special characteristics of the link relevant in a navigation scenario.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:list itemType="NavigationFlagType"/>
						</xs:simpleType>
					</xs:element>
					<xs:element name="TruckRestrictions" type="TruckRestrictionsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Restrictions that apply to trucks on this link. (Only relevant if truck has been selected as TransportMode). Please refer to &lt;b&gt;TruckRestrictionsType&lt;/b&gt; for detailed information on this type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RoadName" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of the road the link is passing</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SuccessorLinkIds" minOccurs="0">
						<xs:annotation>
							<xs:documentation>List of LinkIds that can be accessed from the current link.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:list itemType="common:LinkIdType"/>
						</xs:simpleType>
					</xs:element>
					<xs:element name="PredecessorLinkIds" minOccurs="0">
						<xs:annotation>
							<xs:documentation>List of LinkIds that can be used to enter the current link.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:list itemType="common:LinkIdType"/>
						</xs:simpleType>
					</xs:element>
					<xs:element name="SpeedCategory" type="common:SpeedCategoryType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Speed Category of the link (as static speed information associated with the link independent of the vehicle type). The speed category classifies the general speed trend of a road based on posted or
implied speed limit. Speed Category values represent the combination of several factors besides legal speed limit (e.g., physical restriction or access
characteristics). Therefore, this value can differ from the SpeedLimit element, which represent the legal speed limits only. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Consumption" type="xs:double" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Energy or fuel consumed while traversing link.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DynamicSpeedInfoType">
		<xs:annotation>
			<xs:documentation>Dynamic speed information on the link which can change over time.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TrafficSpeed" type="common:SpeedType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Traffic enabled speed. Estimated speed when considering all traffic relevant constraints.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TrafficTime" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Traffic enabled time. Estimated time spent on this link based on the TrafficSpeed. There might be additional penalties taken into account when calculating the duration which can therefore be greater than link.length / trafficSpeed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BaseSpeed" type="common:SpeedType">
				<xs:annotation>
					<xs:documentation>Base speed. Estimated speed when considering no traffic relevant constraints.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BaseTime" type="common:DurationType">
				<xs:annotation>
					<xs:documentation>Base time. Estimated time spent on this link based on the base speed. There might be additional penalties taken into account when calculating the duration which can therefore be greater than link.length / baseSpeed</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="JamFactor" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The number between 0.0 and 10.0 indicating the expected quality of travel.  As the number approaches 10.0 the quality of travel is getting worse.  -1.0 indicates that a Jam Factor could not be calculated</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="JamFactorTrend" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The number between -1.0 and +1.0 indicating the trend of the jam factor over a period of time.  As the number approaches +1.0 the jam factor is getting worse.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Confidence" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This indicates the level of confidence that Traffic.com has in the flow data.  This will be a value from 0.0 to 1.0 where 1.0 is the highest level of confidence (i.e. dense sensor coverage) and 0.0 is the lowest level of confidence (i.e. completely estimated).  The confidence value of the predicted flow will take into account the current flow confidence.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TruckRestrictionsType">
		<xs:annotation>
			<xs:documentation>This type is used to describe which restrictions apply on a link for trucks.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TrailerForbidden" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates that truck with trailers may not pass</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ForbiddenHazardousGoods" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Types of hazardous goods which are forbidden. Please refer to the enumeration type &lt;b&gt;HazardousGoodType &lt;/b&gt;for supported values.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="HazardousGoodTypeType"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PermittedGrossWeight" type="common:WeightType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Maximum permitted gross weight of the truck in tons</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LimitedWeight" type="common:WeightType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Maximum weight in tons</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WeightPerAxle" type="common:WeightType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Maximum weight per axle in tons</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TrailerWeight" type="common:WeightType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Maximum trailer weight in tons</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Height" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Maximum truck height in meters</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Width" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Maximum truck width in meters.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Length" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Maximum truck length in meters.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TunnelCategory" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Tunnel category. Allowed values are B,C,D,E. Tunnels with given category and above will be forbidden.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConditionalRestriction" type="ConditionalTruckRestrictionType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Restriction dependent on certain truck profile or time.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConditionalTruckRestrictionType">
		<xs:annotation>
			<xs:documentation>Conditional truck restriction applicable to trucks of certain profile or valid only in certain periods.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="LimitedWeight" type="common:WeightType" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Maximum truck weight in tons.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="WeightPerAxle" type="common:WeightType" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Maximum truck weight per axle in tons.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Height" type="xs:double" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Maximum truck height in meters.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Width" type="xs:double" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Maximum truck width in meters.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Length" type="xs:double" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Maximum truck length in meters.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="AccessForbidden" type="xs:boolean" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Indicates that trucks are not allowed to pass.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="TruckProfile" type="TruckRestrictionConditionType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a profile is specified the restriction only applies to trucks matching the profile</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimeDependent" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates that the restriction is valid only in certain periods</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ValidityPeriod" type="common:RecurringTimeIntervalsCombinationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Restriction validity period of time.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TruckRestrictionConditionType">
		<xs:annotation>
			<xs:documentation>Condition on truck profile parameters. Constrains restrictions to trucks of certain profile. Truck matches the profile only when it meets all specified constraints.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TruckType" type="TruckTypeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Constrains restriction to a certain type of truck.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TrailersCount" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Constrains restriction to trucks with specified or greater number of trailers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HazardousGood" type="HazardousGoodTypeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Constrains restriction to trucks shipping specified hazardous good.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TunnelCategory" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Constrains restriction to trucks shipping hazardous goods forbidden by specified tunnel category.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IncidentType">
		<xs:annotation>
			<xs:documentation>An incident describes a temporary event on a route network link. It typically refers to a real world incident (accident, road construction, weather condition, etc.) on a street or street segment.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ValidityPeriod" type="common:PeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Time period when the incident is relevant</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Text" type="xs:string">
				<xs:annotation>
					<xs:documentation>A textual description of the event</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="IncidentTypeType">
				<xs:annotation>
					<xs:documentation>Classifier for the incident; there is currently no semantics or value restriction defined for this attribute</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Criticality" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Criticality on an integer scale:
0 = critical
1 = major
2 = minor
3 = low impact</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:sequence>
				<xs:element name="FirstPoint" type="xs:int" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Index into the geometry array, pointing to the first point of the shape subsegment associated with this Incident.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="LastPoint" type="xs:int" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Index into the geometry array, pointing to the last point of the shape subsegment associated with this Incident.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="PlaceEquipmentType">
		<xs:annotation>
			<xs:documentation>Defines identifiers for equipment available at a place.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="stairs"/>
			<xs:enumeration value="elevator"/>
			<xs:enumeration value="escalator"/>
			<xs:enumeration value="barrierFree"/>
			<xs:enumeration value="shelter"/>
			<xs:enumeration value="restroom"/>
			<xs:enumeration value="shopping"/>
			<xs:enumeration value="restaurant"/>
			<xs:enumeration value="baggageRoom"/>
			<xs:enumeration value="bikeDepot"/>
			<xs:enumeration value="bikeAccepted"/>
			<xs:enumeration value="parking"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="PublicTransportLinkType">
		<xs:annotation>
			<xs:documentation>A public transport link is a link traversed in a route using public transport.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="RouteLinkType">
				<xs:sequence>
					<xs:element name="NextStopName" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Name of the stop at the end of the link.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Line" type="common:ElementReferenceType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference key to the PublicTransportLine object. To reduce data volume, the PublicTransport element is not directly embedded in the ManeuverType object, but is swapped out into the Route element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NextStopId" type="common:TransitStopIdType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>List of intermediate stops. These stops are not changes. Intermediate stops only provide additional information for the customer and show the customer the route.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PublicTransportLineType">
		<xs:annotation>
			<xs:documentation>Defines the information available for a public transport line.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LineName" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of the line</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineForeground" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Color that is to be used as foreground color when drawing the line.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBackground" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Color that is to be used as background color when drawing the line.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineStyle" type="LineStyleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Style that is to be used when drawing the line.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompanyName" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of the transit line's company</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompanyShortName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Short name of the transit line's company</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompanyLogo" type="ExternalResourceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Logo of the transit line's company</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Destination" type="xs:string">
				<xs:annotation>
					<xs:documentation>Final destination of the transport line</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Flags" type="PublicTransportLinkFlagType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Additional attributes classifying the transport line</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="PublicTransportTypeType">
				<xs:annotation>
					<xs:documentation>Type of the transport line</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TypeName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of the transport line's type (e.g. "ICE", "TGV", etc.).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Discover Cities Transit Line Id the segment is on. This is an optional element that applications can use to get additional information about the line such as name, validity periods.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompanyId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Discover Cities Transit company Id</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SystemId" type="common:TransitSystemIdType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Discover Cities Transit System Id</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Stop" type="PublicTransportStopType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of all stops on this public transport line.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="id" type="common:ElementReferenceType">
				<xs:annotation>
					<xs:documentation>Duplicated id element from the respective attribute</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="common:ElementReferenceType" use="required"/>
	</xs:complexType>
	<xs:complexType name="PublicTransportStopType">
		<xs:annotation>
			<xs:documentation>Instances of PublicTransportStopType Represent stops on a public transport line. Stops are different from stations as they are bound to a specific public transport line and a direction of travel, indicated by the line's destination.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Position" type="common:GeoCoordinateType">
				<xs:annotation>
					<xs:documentation>The position of this stop.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line" type="common:ElementReferenceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference key to the PublicTransportLine object. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StopName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The name of this stop.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StopId" type="common:TransitStopIdType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The stop ID of this stop.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NextStopId" type="common:ElementReferenceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference key to the next stop on this public transport line.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TravelTime" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The time required to travel from this stop to the next one using the public transport line specified in the &lt;Line&gt; element</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="common:ElementReferenceType" use="required"/>
	</xs:complexType>
	<xs:simpleType name="PublicTransportTypeType">
		<xs:annotation>
			<xs:documentation>Enumeration type to identify different public transport types.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="busPublic"/>
			<xs:enumeration value="busTouristic"/>
			<xs:enumeration value="busIntercity"/>
			<xs:enumeration value="busExpress"/>
			<xs:enumeration value="railMetroRegional"/>  <!--  S-Bahn -->
			<xs:enumeration value="railMetro"/>  <!--  U-Bahn -->
			<xs:enumeration value="railLight"/>  <!--  Tram -->
			<xs:enumeration value="railRegional"/>  <!--  Regionalbahn -->
			<xs:enumeration value="trainRegional"/>  <!--  Regionalbahn? -->
			<xs:enumeration value="trainIntercity"/>
			<xs:enumeration value="trainHighSpeed"/>
			<xs:enumeration value="monoRail"/>
			<xs:enumeration value="aerial"/>
			<xs:enumeration value="inclined"/>
			<xs:enumeration value="water"/>
			<xs:enumeration value="privateService"/>  <!--  Taxi -->
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="LineStyleType">
		<xs:annotation>
			<xs:documentation>Linestyle used to draw a line</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="solid"/>
			<xs:enumeration value="dotted"/>
			<xs:enumeration value="dash"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PrivateTransportActionType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="depart">
				<xs:annotation>
					<xs:documentation>Identifer for a departure maneuver. Example text: "Start at"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="departAirport">
				<xs:annotation>
					<xs:documentation>Identifer for a departure at an airport maneuver. Example text: "Start toward the airport exit"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="arrive">
				<xs:annotation>
					<xs:documentation>Identifer for an arrival maneuver. Example text: "Arrive at"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="arriveAirport">
				<xs:annotation>
					<xs:documentation>Identifer for an arrival at the airport maneuver. Example text: "Follow the signs to your terminal"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="arriveLeft">
				<xs:annotation>
					<xs:documentation>Identifer for an arrival maneuver with the destination on the left hand side. Example text: "Arrive at"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="arriveRight">
				<xs:annotation>
					<xs:documentation>Identifer for an arrival maneuver with the destination on the right hand side. Example text: "Arrive at"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftLoop">
				<xs:annotation>
					<xs:documentation>Identifer for a left-hand loop maneuver. Example text: "Make a left-hand loop onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftUTurn">
				<xs:annotation>
					<xs:documentation>Identifer for a left-hand U-turn maneuver. Example text: "Make a U-turn at"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="sharpLeftTurn">
				<xs:annotation>
					<xs:documentation>Identifer for a sharp left turn maneuver. Example text: "Make a hard left turn onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftTurn">
				<xs:annotation>
					<xs:documentation>Identifer for a left turn maneuver. Example text: "Turn left on"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="slightLeftTurn">
				<xs:annotation>
					<xs:documentation>Identifer for a slight left turn maneuver. Example text: "Bear left onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="continue">
				<xs:annotation>
					<xs:documentation>Identifer for a continue maneuver. Example text: "Continue on"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="slightRightTurn">
				<xs:annotation>
					<xs:documentation>Identifer for a slight right turn maneuver. Example text: "Bear right onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightTurn">
				<xs:annotation>
					<xs:documentation>Identifer for a right turn maneuver. Example text: "Turn right on"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="sharpRightTurn">
				<xs:annotation>
					<xs:documentation>Identifer for a sharp right turn maneuver. Example text: "Make a hard right turn onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightUTurn">
				<xs:annotation>
					<xs:documentation>Identifer for a right u-turn maneuver. Example text: "Make a right U-turn at"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightLoop">
				<xs:annotation>
					<xs:documentation>Identifer for a right loop maneuver. Example text: "Make a right-hand loop onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftExit">
				<xs:annotation>
					<xs:documentation>Identifer for a left exit maneuver. Example text: "Take the left exit to"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightExit">
				<xs:annotation>
					<xs:documentation>Identifer for a right exit maneuver. Example text: "Take the right exit to"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRamp">
				<xs:annotation>
					<xs:documentation>Identifer for a left ramp maneuver. Example text: "Take the left ramp onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRamp">
				<xs:annotation>
					<xs:documentation>Identifer for a right ramp maneuver. Example text: "Take the right ramp onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftFork">
				<xs:annotation>
					<xs:documentation>Identifer for a left fork maneuver. Example text: "Take the left fork onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="middleFork">
				<xs:annotation>
					<xs:documentation>Identifer for a middle fork maneuver. Example text: "Take the middle fork onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightFork">
				<xs:annotation>
					<xs:documentation>Identifer for a right fork maneuver. Example text: "Take the right fork onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftMerge">
				<xs:annotation>
					<xs:documentation>Identifer for a left merge maneuver. Example text: "Merge left onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightMerge">
				<xs:annotation>
					<xs:documentation>Identifer for a right merge maneuver. Example text: "Merge right onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="nameChange">
				<xs:annotation>
					<xs:documentation>Identifer for a name change maneuver (no maneuver action needed). Example text: "Road becomes"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="trafficCircle">
				<xs:annotation>
					<xs:documentation>Identifer for a traffic circle maneuver. Example text: "At the traffic circle take the exit to"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ferry">
				<xs:annotation>
					<xs:documentation>Identifer for a ferry maneuver. Example text: "Take the ferry to"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRoundaboutEnter">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (left-hand traffic) Example text: "Enter the roundabout"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRoundaboutEnter">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver. Example text: "Enter the roundabout"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRoundaboutPass">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (left-hand traffic) Example text: "Pass the roundabout"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRoundaboutPass">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver. Example text: "Pass the roundabout"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRoundaboutExit1">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (left-hand traffic) Example text: "Take the first exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRoundaboutExit2">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (left-hand traffic) Example text: "Take the second exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRoundaboutExit3">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (left-hand traffic) Example text: "Take the third exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRoundaboutExit4">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (left-hand traffic) Example text: "Take the fourth exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRoundaboutExit5">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (left-hand traffic) Example text: "Take the fifth exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRoundaboutExit6">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (left-hand traffic) Example text: "Take the sixth exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRoundaboutExit7">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (left-hand traffic) Example text: "Take the 7th exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRoundaboutExit8">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (left-hand traffic) Example text: "Take the 8th exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRoundaboutExit9">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (left-hand traffic) Example text: "Take the 9th exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRoundaboutExit10">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (left-hand traffic) Example text: "Take the 10th exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRoundaboutExit11">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (left-hand traffic) Example text: "Take the 11th exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftRoundaboutExit12">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (left-hand traffic) Example text: "Take the 12th exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRoundaboutExit1">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (right-hand traffic) Example text: "Take the first exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRoundaboutExit2">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (right-hand traffic) Example text: "Take the second exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRoundaboutExit3">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (right-hand traffic) Example text: "Take the third exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRoundaboutExit4">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (right-hand traffic) Example text: "Take the fourth exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRoundaboutExit5">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (right-hand traffic) Example text: "Take the fifth exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRoundaboutExit6">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (right-hand traffic) Example text: "Take the sixth exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRoundaboutExit7">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (right-hand traffic) Example text: "Take the 7th exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRoundaboutExit8">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (right-hand traffic) Example text: "Take the 8th exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRoundaboutExit9">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (right-hand traffic) Example text: "Take the 9th exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRoundaboutExit10">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (right-hand traffic) Example text: "Take the 10th exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRoundaboutExit11">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (right-hand traffic) Example text: "Take the 11th exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightRoundaboutExit12">
				<xs:annotation>
					<xs:documentation>Identifer for a roundabout maneuver (right-hand traffic) Example text: "Take the 12th exit of the roundabout onto"</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PublicTransportActionType">
		<xs:annotation>
			<xs:documentation>Enumeration to identify different action types needed for public transport maneuvers.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="enter"/>
			<xs:enumeration value="leave"/>
			<xs:enumeration value="change"/>
			<xs:enumeration value="departStation"/>
			<xs:enumeration value="arriveStation"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RoutingTypeType">
		<xs:annotation>
			<xs:documentation>The &lt;b&gt;RoutingType&lt;/b&gt; provides identifiers for different optimizations which can be applied during the route calculation. Selecting the routing type will internally affect which constraints, speed attributes and weights are taken into account during route calculation.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="fastest">
				<xs:annotation>
					<xs:documentation>Route calculation from start to destination optimizing based on the travel time.  If the travel time forecast is considering current traffic information depends on the provided traffic mode.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="shortest">
				<xs:annotation>
					<xs:documentation>Route calculation from start to destination disregarding any traffic conditions. In this mode, the distance of the route is minimized.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="balanced">
				<xs:annotation>
					<xs:documentation>Route calculation from start to destination optimizing based on combination of travel time and distance. </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="economic">
				<xs:annotation>
					<xs:documentation>Route calculation that optimizes the route in consideration of economic aspects. </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="scenic">
				<xs:annotation>
					<xs:documentation>Route calculation that favors scenic routes and landscapes.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="fastestNow">
				<xs:annotation>
					<xs:documentation>Route calculation from start to destination considering the actual traffic-conditions. Depending on the credentials of the requestor (Basic/Advanced API), the Fastest-Now option will automatically select appropriate constraints to take the actual traffic conditions into account (real-time, patterns, predictive).&#xA;&#xA;This value is a convenience value that is equivalent to routing type = &quot;fastest&quot; &amp;amp; combined with traffic mode = &quot;trafficEnabled&quot;.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="directDrive">
				<xs:annotation>
					<xs:documentation>Route calculation from start to destination disregarding any traffic conditions. For requestors with Basic-API credentials, only the NAVTEQ Speed Category and road closures are applied, for Advanced-API requestors, additional (wherever available) free-flow information is applied.&#xA;&#xA;This value is a convenience value that is equivalent to routing type &quot;fastest&quot; &amp;amp; combined with traffic mode = &quot;trafficDisabled&quot;.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="shortestWalk">
				<xs:annotation>
					<xs:documentation>Route calculation that favors the route with the shortest walking distance. </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leastChanges">
				<xs:annotation>
					<xs:documentation>Route calculation that favors the route with the least transfers. </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="green">
				<xs:annotation>
					<xs:documentation>Route calculation that optimizes the route for fuel or energy consumption. </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RouteQualifierType">
		<xs:annotation>
			<xs:documentation>identifies values for routeQuality
lastRoute: Is the last route starting for that day.
fastestRoute: Route is the Fastest of all provided routes.
shortestWalk: Route includes the shortest walking distance of all provided routes.
</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="lastRoute"/>
			<xs:enumeration value="fastestRoute"/>
			<xs:enumeration value="shortestWalk"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TrafficModeType">
		<xs:annotation>
			<xs:documentation>The &lt;b&gt;TrafficMode&lt;/b&gt; defines if traffic information shall be considered when calculating the route.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="enabled">
				<xs:annotation>
					<xs:documentation>Depending on the credentials of the requestor (Basic/Advanced API), the trafficEnabled option will automatically select appropriate constraints to take the actual traffic conditions into account (real-time, patterns, predictive).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="disabled">
				<xs:annotation>
					<xs:documentation>For requestors with Basic-API credentials, only the NAVTEQ Speed Category and road closures are applied, for Advanced-API requestors, additional (wherever available) free-flow information is applied.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="default">
				<xs:annotation>
					<xs:documentation>The default mode will consider all traffic information that are applicable for the selected TransportMode and the user is authorized to use.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="HazardousGoodTypeType">
		<xs:annotation>
			<xs:documentation>For truck routing, the &lt;b&gt;HazardousGoodsType&lt;/b&gt; defines names for different types of hazardous goods.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="explosive">
				<xs:annotation>
					<xs:documentation>Explosive material</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="gas">
				<xs:annotation>
					<xs:documentation>Gas</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="flammable">
				<xs:annotation>
					<xs:documentation>Flammable material</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="combustible">
				<xs:annotation>
					<xs:documentation>Combustible material</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="organic">
				<xs:annotation>
					<xs:documentation>Organic material</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="poison">
				<xs:annotation>
					<xs:documentation>Poison</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="radioActive">
				<xs:annotation>
					<xs:documentation>Radio-active material</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="corrosive">
				<xs:annotation>
					<xs:documentation>Corrosive material</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="poisonousInhalation">
				<xs:annotation>
					<xs:documentation>Goods which are poisonous upon inhalation</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="harmfulToWater">
				<xs:annotation>
					<xs:documentation>Goods which are harmful to water</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="other">
				<xs:annotation>
					<xs:documentation>Other types of hazardous goods</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="allHazardousGoods">
				<xs:annotation>
					<xs:documentation>When provided in ForbiddenHazardousGoods, this flag indicates that any type of hazardous goods are forbidden.
					Note that this flag will only be return when specifying generation 2 or later (see "gen" parameter).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="TravelProgressType">
		<xs:annotation>
			<xs:documentation>Defines the current travel progress in a navigation scenario.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="mappedPosition" type="WaypointType">
				<xs:annotation>
					<xs:documentation>The current position, potentially evaluated after map matching a sequence of positions provided in the request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="remainDistance" type="common:DistanceType">
				<xs:annotation>
					<xs:documentation>Remaining distance to the destination from the current position</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="remainTime" type="common:DurationType">
				<xs:annotation>
					<xs:documentation>Remaining time needed to reach the destination from the current position considering traffic information</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="RouteLinkFlagType">
		<xs:annotation>
			<xs:documentation>Defines a list of special characteristics that may apply to a link</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="tollroad">
				<xs:annotation>
					<xs:documentation>Link is part of a toll road</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="motorway">
				<xs:annotation>
					<xs:documentation>Link is part of a motorway</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="boatFerry">
				<xs:annotation>
					<xs:documentation>Link can only be traversed by using a boat ferry</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="railFerry">
				<xs:annotation>
					<xs:documentation>Link can only be traversed by using a rail ferry</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="publicTransport">
				<xs:annotation>
					<xs:documentation>Link is part of a public transport connection</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="tunnel">
				<xs:annotation>
					<xs:documentation>Link passes through a tunnel</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="dirtRoad">
				<xs:annotation>
					<xs:documentation>Link is part of a dirt road</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="park">
				<xs:annotation>
					<xs:documentation>Link is part of a park</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HOVLane">
				<xs:annotation>
					<xs:documentation>Link can only be traversed by using high-occupancy vehicle (HOV) lanes</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="stairs">
				<xs:annotation>
					<xs:documentation>Link can only be traversed by using stairs</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="railFerry">
				<xs:annotation>
					<xs:documentation>Link can only be traversed by using a rail ferry</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="boatFerry">
				<xs:annotation>
					<xs:documentation>Link can only be traversed by using a boat ferry</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="gatedArea">
				<xs:annotation>
					<xs:documentation>Link is part of a gated area</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="privateRoad">
				<xs:annotation>
					<xs:documentation>Link is part of a private road</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="station">
				<xs:annotation>
					<xs:documentation>Link is located at a station</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="unpaved">
				<xs:annotation>
					<xs:documentation>Link is part of an unpaved road</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="fourWheelDrive">
				<xs:annotation>
					<xs:documentation>Link is part of a road that is suitable only for vehicles with four-wheel drive</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="noThroughRoad">
				<xs:annotation>
					<xs:documentation>Link is part of a road that you can enter but you have to exit the same way</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="scenic">
				<xs:annotation>
					<xs:documentation>Link is part of a road that has been marked as scenic</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="builtUpArea">
				<xs:annotation>
					<xs:documentation>Link is part of a built up area. Note that this flag will only be return when specifying generation 2 or later (see "gen" parameter).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="walkingRoad">
				<xs:annotation>
					<xs:documentation>Link is part of a walking only road. Note that this flag is specific to bicycle transport mode and is needed to highlight walking segments.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PublicTransportFlagType">
		<xs:annotation>
			<xs:documentation>Defines a list of special characteristics that may apply to the public transport segments of a route.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="containsTimeEstimate">
				<xs:annotation>
					<xs:documentation>The route contains a public transport leg which uses estimated times based on known transit frequency</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="walkSpeedUnsupported">
				<xs:annotation>
					<xs:documentation>The route was requested in a region where timetable routing does not support the walkSpeed parameter.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="walkRadiusUnsupported">
				<xs:annotation>
					<xs:documentation>The route was requested in a region where timetable routing does not support the walkRadius parameter.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="maxChangesUnsupported">
				<xs:annotation>
					<xs:documentation>The route was requested in a region where timetable routing does not support the maxChanges parameter.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="avoidTransportTypesUnsupported">
				<xs:annotation>
					<xs:documentation>The route was requested in a region where timetable routing does not support the avoidTransportTypes parameter.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TransportModeType">
		<xs:annotation>
			<xs:documentation>The &lt;b&gt;TransportMode&lt;/b&gt; provides identifiers for differentiating the transport mode. Depending on the transport mode special constraints, speed attributes and weights are taken into account during route calculation.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="car">
				<xs:annotation>
					<xs:documentation>Route calculation for cars.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="carHOV">
				<xs:annotation>
					<xs:documentation>Route calculation for HOV (High Occupancy Vehicle) cars.</xs:documentation>
				</xs:annotation>
				</xs:enumeration>
			<xs:enumeration value="pedestrian">
				<xs:annotation>
					<xs:documentation>Route calculation for a pedestrian. As one effect, maneuvers will be optimized for walking, i.e. segments will consider actions relevant for pedestrians and maneuver instructions will contain texts suitable for a walking person. This mode disregards any traffic information.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="publicTransport">
				<xs:annotation>
					<xs:documentation>Route calculation using public transport only.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="truck">
				<xs:annotation>
					<xs:documentation>Route calculation for trucks. This mode will consider truck limitations on links and will use different speed assumptions when calculating the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="bicycle">
				<xs:annotation>
					<xs:documentation>Route calculation for bicycles.&#xA;&lt;i&gt;Note: not yet supported&lt;/i&gt;</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="publicTransportTimeTable">
				<xs:annotation>
					<xs:documentation>Route calculation using public transport only with support for time table based routing.
					Note that time table based routing is not support in all regions. The routing service may choose to fallback
					to simple public transport routing in case no time table information is available. In this case, the mode
					entry in the returned Route object will be set accordingly.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="bus">
				<xs:annotation>
					<xs:documentation>Route calculation for busses. This mode will consider roads for which bus restrictions apply for the route calculations.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="scooter">
				<xs:annotation>
					<xs:documentation>Route calculation for scooters.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="DirectionType">
		<xs:annotation>
			<xs:documentation>Enumeration type to identify directions at a maneuver.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="forward"/>
			<xs:enumeration value="bearRight"/>
			<xs:enumeration value="lightRight"/>
			<xs:enumeration value="right"/>
			<xs:enumeration value="hardRight"/>
			<xs:enumeration value="uTurnRight"/>
			<xs:enumeration value="uTurnLeft"/>
			<xs:enumeration value="hardLeft"/>
			<xs:enumeration value="left"/>
			<xs:enumeration value="lightLeft"/>
			<xs:enumeration value="bearLeft"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="IncidentTypeType">
		<xs:annotation>
			<xs:documentation>Defines identifiers for different incidents</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="other">
				<xs:annotation>
					<xs:documentation>Indicates that there is other type of impediment that affecting the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="roadworks">
				<xs:annotation>
					<xs:documentation>Indicates that there are roadworks expected on some part of route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="accident">
				<xs:annotation>
					<xs:documentation>Indicates that there has been an accident reported on some part of route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="congestion">
				<xs:annotation>
					<xs:documentation>Indicates that one should expect congestions on some part of route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="flow">
				<xs:annotation>
					<xs:documentation>Indicates that there is traffic flow (e.g. sluggish traffic) affecting the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="closure">
				<xs:annotation>
					<xs:documentation>Indicates that there is a road closure affecting the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PublicTransportLinkFlagType">
		<xs:annotation>
			<xs:documentation>Identifiers for additional attributes classifying a public transport link</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="barrierFree"/>
			<xs:enumeration value="bicycleAllowed"/>
			<xs:enumeration value="lowFloorVehicle"/>
			<xs:enumeration value="physicalDisabilityAccess"/>
			<xs:enumeration value="restaurantEquipped"/>
			<xs:enumeration value="snackBarEquipped"/>
			<xs:enumeration value="airConditioned"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RouteFeatureType">
		<xs:annotation>
			<xs:documentation>The routing features can be used to define special conditions on the calculated route. The user can weight each feature with positive or negative weights, see type RouteFeatureWeight.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="tollroad">
				<xs:annotation>
					<xs:documentation>Identifier for toll roads</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="motorway">
				<xs:annotation>
					<xs:documentation>Identifier for motorways</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="boatFerry">
				<xs:annotation>
					<xs:documentation>Identifier for boat ferries</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="railFerry">
				<xs:annotation>
					<xs:documentation>Identifier for rail ferries</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="publicTransport">
				<xs:annotation>
					<xs:documentation>Identifier for public transport</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="tunnel">
				<xs:annotation>
					<xs:documentation>Identifier for tunnels</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="dirtRoad">
				<xs:annotation>
					<xs:documentation>Identifier for dirt roads</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="park">
				<xs:annotation>
					<xs:documentation>Identifier for links through parks</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HOVLane">
				<xs:annotation>
					<xs:documentation>Identifier for high-occupancy vehicle (HOV) lanes</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="stairs">
				<xs:annotation>
					<xs:documentation>Identifier for stairs. This route feature is only applicable for pedestrian routing.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RouteFeatureWeightType">
		<xs:annotation>
			<xs:documentation>Route feature weights are used to define weighted conditions on special route features like "tollroad", "motorways", etc. (see type RouteFeature for a complete list) that the calculated route is supposed to fulfill.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:byte">
			<xs:enumeration value="-3">
				<xs:annotation>
					<xs:documentation>&lt;b&gt;strictExclude:&lt;/b&gt; The routing algorithm guarantees that strictly excluded features won't be part of the resulting route. If this condition cannot be fulfilled no route will be returned.
"HOVLanes" and "stairs" are examples for features where a strict exclusion might be required.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-2">
				<xs:annotation>
					<xs:documentation>&lt;b&gt;softExclude:&lt;/b&gt; The routing engine will not consider links with the corresponding feature. If no route can be found because of these limitations the condition will be weakened.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-1">
				<xs:annotation>
					<xs:documentation>&lt;b&gt;avoid:&lt;/b&gt;The routing engine will assign penalties for links with the corresponding feature. </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="0">
				<xs:annotation>
					<xs:documentation>&lt;b&gt;normal:&lt;/b&gt;The routing engine will neither prefer nor avoid or exclude links with the corresponding feature.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="1">
				<xs:annotation>
					<xs:documentation>&lt;b&gt;prefer:&lt;/b&gt;The routing engine will prefer links with the corresponding route feature.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="WeightedRouteFeatureType">
		<xs:annotation>
			<xs:documentation>This type is used to assign a weight to a RouteFeature.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="RouteFeatureType">
				<xs:attribute name="weight" type="RouteFeatureWeightType" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="ExternalResourceType">
		<xs:annotation>
			<xs:documentation>Reference  to an external resource (e.g. a bitmap). The client is responsible for retrieving the referenced resource.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ResourceType" type="ResourceTypeType">
				<xs:annotation>
					<xs:documentation>The semantics of the resource. Please refer to the enumeration type &lt;b&gt;ResourceType &lt;/b&gt;for a list of supported values.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Filename" type="xs:string">
				<xs:annotation>
					<xs:documentation>Filename of the resource</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="RouteNoteCodeType">
		<xs:annotation>
			<xs:documentation>Defines identifiers for Routing Notes.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="routingOptionViolated">
				<xs:annotation>
					<xs:documentation>Indicates that routing options have been violoated, i.e. the route contains route features that should have been avoided. The violated routing feature will be provided in the additional data container of the corresponding note.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="passingPlace">
				<xs:annotation>
					<xs:documentation>Indicates that a special place (city, country border, POI, etc.) will be passed in the segment following the maneuver. The name and type of the place will be provided in the additional data container of the corresponding note.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="roadNameChanged">
				<xs:annotation>
					<xs:documentation>Indicates that road name and/or route number will change at the given position without an additional maneuver taking place. The new street name and/or route number will be provided in the additional data container of the corresponding note.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="sharpCurveAhead">
				<xs:annotation>
					<xs:documentation>Indicates that a sharp curve is ahead of the maneuver's position.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="linkFeatureAhead">
				<xs:annotation>
					<xs:documentation>Indicates that a special link characteristic will be met after the maneuver. The identifier for the link characteristic (see enumeration type LinkFlag) will be provided in the additional data container of the corresponding note.  </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="timeDependentRestriction">
				<xs:annotation>
					<xs:documentation>Indicates time dependent restrictions for the segment following the maneuver, e.g. "road closed in winter". The validity period of this restriction will be provided in the corresponding note.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="previousIntersection">
				<xs:annotation>
					<xs:documentation>Indicates the name of a previous intersection in a maneuver, e.g. for indicating the last intersection before arrival. The name of the intersection along with a descriptive text will be provided in the Text field of the corresponding note, e.g. "The last intersection is Markkulantie".</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="nextIntersection">
				<xs:annotation>
					<xs:documentation>Indicates the name of a next intersection in a maneuver, e.g. for indicating the last intersection before arrival. The name of the intersection along with a descriptive text will be provided in the Text field of the corresponding note, e.g. "If you reach Rantalantie, you've gone too far".</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="adminDivisionChange">
				<xs:annotation>
					<xs:documentation>Indicates that some part of route crosses administrative division border (state, province, etc.)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="countryChange">
				<xs:annotation>
					<xs:documentation>Indicates that some part of route crosses country border.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="gateAccess">
				<xs:annotation>
					<xs:documentation>Indicates that some part of route enters or leaves a gated area.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="privateRoad">
				<xs:annotation>
					<xs:documentation>Indicates that some part of route runs through a privately owned road.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="tollBooth">
				<xs:annotation>
					<xs:documentation>Indicates that some part of route may require a stop at a toll booth.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="tollRoad">
				<xs:annotation>
					<xs:documentation>Indicates that some parts of the route are toll roads.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="unpavedRoad">
				<xs:annotation>
					<xs:documentation>Indicates that some part of route is unpaved.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="restrictedTurn">
				<xs:annotation>
					<xs:documentation>Indicates that some parts of the route may be subject to turn restrictions.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="seasonalClosures">
				<xs:annotation>
					<xs:documentation>Indicates that one should expect seasonal closures on some part of route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="congestion">
				<xs:annotation>
					<xs:documentation>Indicates that one should expect congestions on some part of route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="roadworks">
				<xs:annotation>
					<xs:documentation>Indicates that there are roadworks expected on some part of route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="accident">
				<xs:annotation>
					<xs:documentation>Indicates that there has been an accident reported on some part of route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="closure">
				<xs:annotation>
					<xs:documentation>Indicates that there is a road closure affecting the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="trafficFlow">
				<xs:annotation>
					<xs:documentation>Indicates that there is traffic flow (e.g. sluggish traffic) affecting the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="copyright">
				<xs:annotation>
					<xs:documentation>Indicates a RouteNote including copyright information.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="containsWalkingRoad">
				<xs:annotation>
					<xs:documentation>For bicycle routes, indicates that part of the maneuver must be walked</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="truckRestriction">
				<xs:annotation>
					<xs:documentation>Indicates that non-time dependent truck restriction is violated.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RouteNoteTypeType">
		<xs:annotation>
			<xs:documentation>Defines identifiers for Routing Notes.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="info">
				<xs:annotation>
					<xs:documentation>Indicates an additional information for the maneuver or the segment leading to the maneuvr, like "border crossing", "segment includes tunnel/bridge/toll/unpaved/etc.".</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="warning">
				<xs:annotation>
					<xs:documentation>Indicates a note with warning character, like "sharp curve ahead".</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="restriction">
				<xs:annotation>
					<xs:documentation>Indicates a note providing additional information about e.g. time dependent restrictions on the segment ("road closed during winter").</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="violation">
				<xs:annotation>
					<xs:documentation>Indicates a note providing additional information about violated routing options, e.g. route contains tollroads even though it has been requested to avoid tollroads.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="traffic">
				<xs:annotation>
					<xs:documentation>Indicates a note providing additional information on traffic.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ResourceTypeType">
		<xs:annotation>
			<xs:documentation>Defines a list of supported resource type identifiers.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="junctionView">
				<xs:annotation>
					<xs:documentation>Identifier for the bitmap representing the Junction View.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="signAsReal">
				<xs:annotation>
					<xs:documentation>Identifier for the bitmap representing the sign-as-real information.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="directionArrow">
				<xs:annotation>
					<xs:documentation>Identifier for the bitmap representing the direction arrow at a junction which will be displayed on top of the junction view.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="advertising">
				<xs:annotation>
					<xs:documentation>Identifier for the bitmap representing any kind of advertisement.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="vendorIcon">
				<xs:annotation>
					<xs:documentation>Identifier for the bitmap representing the vendor icon e.g. of a public transport system.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="vendorLogo">
				<xs:annotation>
					<xs:documentation>Identifier for the bitmap representing the vendor logo e.g. of a public transport system.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="routeTemplate">
				<xs:annotation>
					<xs:documentation>Identifier for the svg resource representing a template for displaying routes (e.g. highway signs). Clients will have to include the route number in the graphic to display a concrete route sign.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="WaypointParameterType" abstract="true">
		<xs:annotation>
			<xs:documentation>Waypoints of a route can be specified in three different manners, either by specifying a rough position (approximation mode, see GeoWaypointParameter) or an exact reference to a link (exact mode, see NavigationWaypointParameter). In the approximation mode the routing service tries to find the best matching link to be used based on the routing network. Each waypoint may be specified in either mode.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Type" type="WaypointParameterTypeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the type (stop over/pass through) of the waypoint. Defaults to stopOver if not specified.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EntityType" type="WaypointParameterEntityTypeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the entity type (airport, intersection or full address) of the waypoint.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EntityDetails" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the details of the entity (e.g. name of the intersection, full address details) of the waypoint.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdditionalData" type="common:KeyValuePairType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Container for additional information about the waypoint to be passed to the routing engine like output from the geocoding</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserLabel" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A label identifying this waypoint, as specified in the request. In contrast to the &quot;Label&quot; field, this entry is copied verbatim from the waypoint parameter in the routing request. The &quot;UserLabel&quot; field can be used to identify a waypoint with a user-chosen name.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StopOverDuration" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Waiting duration in stopOver waypoint. Ignored for passThrough waypoints.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GeoWaypointParameterType">
		<xs:complexContent>
			<xs:extension base="WaypointParameterType">
				<xs:sequence>
					<xs:element name="Position" type="common:GeoCoordinateType">
						<xs:annotation>
							<xs:documentation>Coordinate as center for the approximation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TransitRadius" type="common:DistanceType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Matching Links are selected within the specified TransitRadius.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Heading" type="common:HeadingType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Direction of travel of the hosting device</xs:documentation>
						</xs:annotation>
					</xs:element>
                    <xs:element name="FunctionalRoadClass" type="common:FunctionalClassType" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Desired Functional Road Class of link to match onto</xs:documentation>
                        </xs:annotation>
                    </xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="RouteAttributeType">
		<xs:annotation>
			<xs:documentation>In many use cases, not all route attributes are required at once. To be able to specify which part of the route shall be returned by services, the enumeration type &lt;b&gt;RouteAttributes&lt;/b&gt; defines switches for route attribute inclusion and exclusion.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="waypoints">
				<xs:annotation>
					<xs:documentation>Short value: "wp". Indicates whether via points shall be included in the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="summary">
				<xs:annotation>
					<xs:documentation>Short value: "sm": Indicates whether a route summary shall be provided for the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="summaryByCountry">
				<xs:annotation>
					<xs:documentation>Short value: "sc". Indicates whether a country-based route summary shall be provided for the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="shape">
				<xs:annotation>
					<xs:documentation>Short value: "sh". Indicates whether the shape of the route shall be provided for the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="boundingBox">
				<xs:annotation>
					<xs:documentation>Short value: "bb". Indicates whether the bounding box of the route shall be provided for the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="legs">
				<xs:annotation>
					<xs:documentation>Short value: "lg". Indicates whether the legs of the route shall be provided for the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="notes">
				<xs:annotation>
					<xs:documentation>Short value: "no". Indicates whether additional notes shall be provided for the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="lines">
				<xs:annotation>
					<xs:documentation>Short value: "li". Indicates whether PublicTransportLines shall be provided for the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="compressedShapes">
				<xs:annotation>
					<xs:documentation>Short value: "sz": Indicates whether compressed shape information should be included in the route. Shape compression may considerably reduce the amount of data transferred.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="groups">
				<xs:annotation>
					<xs:documentation>Short value: "gr": Indicates whether Maneuver Groups should be included in the route. Maneuver Groups are mainly useful for multi modal routes</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="routeId">
				<xs:annotation>
					<xs:documentation>Short value: "ri": Indicates whether RouteId should be included in the route response. By default RouteIds are not returned in the 7.2 interface. If required the flag needs to be explicitly set and it has performance impact.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="tickets">
				<xs:annotation>
					<xs:documentation>Short value: "tx": Indicates whether PublicTransportTickets shall be provided for the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="incidents">
				<xs:annotation>
					<xs:documentation>Short value: "ic". Indicates whether traffic incidents shall be provided for the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="labels">
				<xs:annotation>
					<xs:documentation>Short value: "la": Indicates whether labels shall be provided for the route. Route labels are useful to distinguish between alternative routes.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="zones">
				<xs:annotation>
					<xs:documentation>Short value: "zo". Indicates whether zones shall be provided for the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RouteLegAttributeType">
		<xs:annotation>
			<xs:documentation>In many use cases, not all route leg attributes are required at once. To be able to specify which part of the route shall be returned by services, the enumeration type &lt;b&gt;RouteLegAttribute&lt;/b&gt; defines switches for route leg attribute inclusion and exclusion.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="waypoint">
				<xs:annotation>
					<xs:documentation>Short value: "wp". Indicates whether the waypoint shall be included in the route leg.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="maneuvers">
				<xs:annotation>
					<xs:documentation>Short value: "mn". Indicates whether the maneuvers of the route leg shall be provided.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="links">
				<xs:annotation>
					<xs:documentation>Short value: "li". Indicates whether the links along the route leg shall be provided.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="length">
				<xs:annotation>
					<xs:documentation>Short value: "le". Indicates whether the route leg should include its length</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="travelTime">
				<xs:annotation>
					<xs:documentation>Short value: "tt". Indicates whether the route leg should include its duration</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="shape">
				<xs:annotation>
					<xs:documentation>Short value: "sh". Indicates whether the shape of the segment to the next maneuver should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="indices">
				<xs:annotation>
					<xs:documentation>Short value: "ix": Indicates whether shape index information (FirstPoint, LastPoint) should be included in the maneuvers instead of copying shape points to the maneuver.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="compressedShapes">
				<xs:annotation>
					<xs:documentation>Short value: "sz": Indicates whether compressed shape information should be included in the route leg. Shape compression may considerably reduce the amount of data transferred.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="boundingBox">
				<xs:annotation>
					<xs:documentation>Short value: "bb". Indicates whether the bounding box of the maneuver shall be provided.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="baseTime">
				<xs:annotation>
					<xs:documentation>Short value: "bt": Indicates whether the BaseTime information should be provided in RouteLegs.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="trafficTime">
				<xs:annotation>
					<xs:documentation>Short value: "tm": Indicates whether the TrafficTime information should be included in RouteLegs.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="summary">
				<xs:annotation>
					<xs:documentation>Short value: "sm": Indicates whether distance and time summary information should be included in RouteLegs.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="subLegSummaries">
				<xs:annotation>
					<xs:documentation>Short value: "sl": Indicates whether sub leg summaries should be included in RouteLegs. Sub legs are defined by the usage of passThrough waypoints.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="batteryCharge">
				<xs:annotation>
					<xs:documentation>Short value: "bc": Indicates whether the battery charge information should be included in RouteLegs.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="stayingTime">
				<xs:annotation>
					<xs:documentation>Short value: "st": Indicates whether the StayingTime information should be included in RouteLegs.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PublicTransportLineAttributeType">
		<xs:annotation>
			<xs:documentation>In many use cases, not all public transport line attributes are required at once. To be able to specify which part of the lines shall be returned by services, the enumeration type &lt;b&gt;PublicTransportLineAttributeType&lt;/b&gt; defines switches for line attribute inclusion and exclusion.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="foreground">
				<xs:annotation>
					<xs:documentation>Short value: "fg". Indicates whether the foreground color shall be included in the line.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="background">
				<xs:annotation>
					<xs:documentation>Short value: "bg". Indicates whether the background color of the line shall be provided.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="lineStyle">
				<xs:annotation>
					<xs:documentation>Short value: "ls". Indicates whether the line style of the public transport line shall be provided.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="companyShortName">
				<xs:annotation>
					<xs:documentation>Short value: "cs". Indicates whether the company short name should be included in the public transport line.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="companyLogo">
				<xs:annotation>
					<xs:documentation>Short value: "cl". Indicates whether the company logo should be included in the public transport line.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="flags">
				<xs:annotation>
					<xs:documentation>Short value: "fl". Indicates whether the flags should be included in the public transport line.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="typeName">
				<xs:annotation>
					<xs:documentation>Short value: "tn". Indicates whether the type name should be included in the public transport line.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="lineId">
				<xs:annotation>
					<xs:documentation>Short value: "li". Indicates whether the line Id should be included in the public transport line.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="companyId">
				<xs:annotation>
					<xs:documentation>Short value: "ci". Indicates whether the company Id should be included in the public transport line.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="systemId">
				<xs:annotation>
					<xs:documentation>Short value: "si". Indicates whether the system Id should be included in the public transport line.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="stops">
				<xs:annotation>
					<xs:documentation>Short value: "st". Indicates whether stops should be included in the public transport line.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="RouteRepresentationOptionsType">
		<xs:annotation>
			<xs:documentation>In many use cases, not all objects and attributes in the route's object model are required at once. The enumeration type &lt;b&gt;RouteRepresentationMode&lt;/b&gt; has been introduced to conveniently define which part of the route shall be returned by services for standard use cases. Any custom route representation definition besides these predefined modes is possible by using the detailed AttributeType switches (see &lt;b&gt;RouteAttribute&lt;/b&gt;, &lt;b&gt;RouteLegAttribute&lt;/b&gt;, &lt;b&gt;RouteAttribute&lt;/b&gt;, &lt;b&gt;ManeuverAttribute&lt;/b&gt; and &lt;b&gt;RouteLinkAttribute&lt;/b&gt;).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Language" type="common:LanguageCodeParameterType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The language to be used for all textual information, such as maneuver instructions.
					If more than one language parameter is specified, the first available language will be used in responses.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepresentationMode" type="RouteRepresentationModeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The representation mode is a convenience parameter to define the data representation of the route for common use cases (see &lt;b&gt;RouteRepresentationMode&lt;/b&gt; for supported values)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RouteAttributes" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sequence of attribute keys of the fields that are included in the routes (see &lt;b&gt;RouteAttribute&lt;/b&gt; for supported attributes)
If not specified, defaults to "waypoints", "summary", "legs".</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="RouteAttributeType"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="LegAttributes" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sequence of attribute keys of the fields that are included in the route legs (see &lt;b&gt;RouteLegAttribute&lt;/b&gt; for a list of supported attributes)
If not specified, defaults to "maneuvers", "waypoint", "length", "travelTime".</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="RouteLegAttributeType"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ManeuverAttributes" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sequence of attribute keys of the fields that are included in the maneuvers (see &lt;b&gt;ManeuverAttribute&lt;/b&gt; for a list of supported attributes)
If not specified, defaults to "position", "length", "travelTime".</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="ManeuverAttributeType"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="LinkAttributes" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sequence of attribute keys of the fields that are included in the links (see &lt;b&gt;RouteLinkAttribute&lt;/b&gt; for a list of supported attributes)
If not specified, defaults to "shape", "speedLimit", "dynamicSpeedInfo", "street"</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="RouteLinkAttributeType"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CorridorDepth" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The corridor depth defines the depth of the link network that will be spanned around the base route. A depth of 0 will only return the base route; a depth of 1 will additionally return the routes to the destination allowing one wrong maneuver drifting away from the optimal base route&#xA;&lt;i&gt;Note: obsoleted. Please use CorridorOptions instead.&lt;/i&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CorridorOptions" type="CorridorRepresentationOptionsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines to which extent the corridor will be set up around the base route. If this element is missing only the base route will be returned.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ViewBounds" type="common:GeoBoundingBoxType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If the view bounds are given in the request only shapes and links which fit into these bounds will be returned. A common use case for this is the drag and drop scenario where the client is only interested in a rough visual update of the route in the currently visible bounds.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ViewResolution" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Resolution of the view in meters per pixel (mpp). This information allows the route shape in the response to reflect the client's resolution.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SnapResolution" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Resolution for snapping to road elements, measured in meters per pixel (mpp). This allows the routing service to pick links which for waypoints which are actually visible in the client's current display resolution. The value can be specified independently from the ViewResolution which is used for generalizing shape information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InstructionFormat" type="InstructionFormatType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the representation format of the maneuver's instruction text. If this element is missing "text" will be assumed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineAttributes" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sequence of attribute keys of the fields that are included in public transport line elements (see &lt;b&gt;PublicTransportLineAttributeType&lt;/b&gt; for a list of supported attributes)
If not specified, defaults to "lineForeground", "lineBackground", "lineId"</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="PublicTransportLineAttributeType"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ReturnElevation" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If set to true, elevation would be returned for coordinates inside all elements of type CoordinatesArrayType</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CorridorRepresentationOptionsType">
		<xs:annotation>
			<xs:documentation>Defines to which extent the corridor will be set up around the base route. If multiple tolerance values have been set the less restrictive value will be applied.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ToleranceDuration" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the duration the user is allowed to deviate from the base route with the corridor information still being available.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToleranceDistance" type="common:DistanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the distance the user is allowed to deviate from the base route with the corridor information still being available.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToleranceLevel" type="CorridorToleranceLevelType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the number of wrong turns the user is allowed to deviate from the base route with the corridor still being available.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CorridorToleranceLevelType">
		<xs:annotation>
			<xs:documentation>The corridor tolerance level allows to specify the number of wrong turns the user is allowed to deviate from the base route with the corridor still being available.
The level is defined only for the area specified in the area attribute, e.g. for the start or the destination of the route.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Area" type="CorridorAreaType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the area type where the tolerance level applies. Please refer to the enumeration type &lt;b&gt;CorridorAreaType &lt;/b&gt;for a list of supported values.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AreaRadius" type="common:DistanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the radius of the area where the tolerance level applies. In case of a point based area type (start, destination, endpoints, waypoints) the value represents the radius of the circle; in case of a polyline based type (route) the value represents the distance to the polyline.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LevelMajorNetwork" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Number of wrong turns allowed on major network links that will still be covered by the corridor.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LevelMinorNetwork" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Number of wrong turns allowed on minor network links that will still be covered by the corridor.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="CorridorAreaType">
		<xs:annotation>
			<xs:documentation>Identifier for the different types of corridor areas used to specify tolerance levels.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="start"/>
			<xs:enumeration value="destination"/>
			<xs:enumeration value="endpoints"/>
			<xs:enumeration value="waypoints"/>
			<xs:enumeration value="route"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="NavigationModeType">
		<xs:annotation>
			<xs:documentation>Identifier for the different navigation request modes.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="none">
				<xs:annotation>
					<xs:documentation>No navigation relevant logic will be considered (i.e. normal route calculation for e.g. route display). This mode is the default for route calculation.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="default">
				<xs:annotation>
					<xs:documentation>Default navigation mode. This mode will use the navigation kernel for route calculation and return corridor information as specified in the corridor options.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="preroute">
				<xs:annotation>
					<xs:documentation>Mode that will return the minimal information needed to start navigation thereby allowing a quick user response. The client could already send a route request with the "default" navigation mode in parallel which will then return the complete route content.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="baseroute">
				<xs:annotation>
					<xs:documentation>Mode that will only return the base route even though the calculation will be done using the navigation kernel.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="TruckProfileType">
		<xs:annotation>
			<xs:documentation>Defines settings relevant for truck routing.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="HasTrailer" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines if the truck has a trailer</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippedHazardousGoods" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the list of hazardous goods that is shipped by the truck.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="HazardousGoodTypeType"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PermittedGrossWeight" type="common:WeightType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the permitted vehicle gross weight</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LimitedWeight" type="common:WeightType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the vehicle's limited weight</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WeightPerAxle" type="common:WeightType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the vehicle's weight per axle</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TrailerWeight" type="common:WeightType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the weight of the vehicle's trailer</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Height" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the height of the truck in meters</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Width" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the width of the truck in meters</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Length" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the length of the truck in meter</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TunnelCategory" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines tunnel category. Allowed values are B,C,D,E. Tunnels with given category and above will be forbidden.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TruckType" type="TruckTypeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines a type of the truck. Default value is 'truck'.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TrailersCount" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the number of trailers. Max value is 4. In case of more trailers the max value is supposed to be used.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TruckRestrictionPenalty" type="TruckRestrictionPenaltyType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines penalty on violated truck restrictions. Default value is 'strict'. The value 'soft' can be used only when notes are enabled by route representation options at least at route level (see RouteAttributeType).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="TruckTypeType">
		<xs:annotation>
			<xs:documentation>Defines different types of the trucks.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="truck">
				<xs:annotation>
					<xs:documentation>Any truck.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="tractorTruck">
				<xs:annotation>
					<xs:documentation>A truck capable of pulling semi-trailers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TruckRestrictionPenaltyType">
		<xs:annotation>
			<xs:documentation>Defines penalty on violated truck restrictions.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="strict">
				<xs:annotation>
					<xs:documentation>Links which are restricted for truck defined with TruckProfileType are guaranteed to be not a part of route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="soft">
				<xs:annotation>
					<xs:documentation>Links where truck restrictions are violated will be avoided, but if there is no way around route will go through restricted links. Route calculated with this option may violate truck restrictions and therefore be not valid to travel. Check route/maneuver notes for truck restriction violations on the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RouteRepresentationModeType">
		<xs:annotation>
			<xs:documentation>In many use cases, not all objects and attributes in the route's object model are required at once. The enumeration type &lt;b&gt;RouteRepresentationMode&lt;/b&gt; has been introduced to conveniently define which part of the route shall be returned by services for standard use cases. Any custom route representation definition besides these predefined modes is possible by using the detailed AttributeType switches (see &lt;b&gt;RouteResponseAttribute&lt;/b&gt;, &lt;b&gt;RouteAttribute&lt;/b&gt;, &lt;b&gt;ManeuverAttribute&lt;/b&gt; and &lt;b&gt;LinkAttribute&lt;/b&gt;).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="overview">
				<xs:annotation>
					<xs:documentation>Overview mode only returning the Route and the RouteSummary object</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="display">
				<xs:annotation>
					<xs:documentation>Display mode that allows to show the route with all maneuvers. Links won't be included in the response</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="dragNDrop">
				<xs:annotation>
					<xs:documentation>Drag and Drop mode to be used during drag and drop (re-routing) actions. The response will only contain the shape of the route restricted to the view bounds provided in the representation options.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="navigation">
				<xs:annotation>
					<xs:documentation>Navigation mode to provide all information necessary to support a navigation device. This mode activates the most extensive data response as all link information will be included in the response to allow a detailed display while navigating.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="linkPaging">
				<xs:annotation>
					<xs:documentation>Paging mode that will be used when incrementally loading links while navigating along the route. The response will be limited to link information.&#xA;&lt;i&gt;Note: not yet supported&lt;/i&gt;</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="turnByTurn">
				<xs:annotation>
					<xs:documentation>Turn by turn mode to provide all information necessary to support turn by turn. This mode activates all data needed for navigation exluding any redundancies.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ManeuverAttributeType">
		<xs:annotation>
			<xs:documentation>In many use cases, not all maneuver attributes are required at once. To be able to specify which part of the maneuvers shall be returned by services, the enumeration type &lt;b&gt;ManeuverAttributes&lt;/b&gt; defines switches for maneuver attribute inclusion and exclusion.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="position">
				<xs:annotation>
					<xs:documentation>Short value: "po". Indicates whether the position should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="shape">
				<xs:annotation>
					<xs:documentation>Short value: "sh". Indicates whether the shape of the segment to the next maneuver should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="travelTime">
				<xs:annotation>
					<xs:documentation>Short value: "tt". Indicates whether the time needed to the next maneuver should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="length">
				<xs:annotation>
					<xs:documentation>Short value: "le". Indicates whether the distance to the next maneuver should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="time">
				<xs:annotation>
					<xs:documentation>Short value: "ti". Indicates whether the point in time when the maneuver will take place should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="link">
				<xs:annotation>
					<xs:documentation>Short value: "li". Indicates whether the link where the maneuver takes place shall be included in the maneuver.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="publicTransportLine">
				<xs:annotation>
					<xs:documentation>Short value: "pt". Indicates whether the information about the public transport line should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="platform">
				<xs:annotation>
					<xs:documentation>Short value: "pl". Indicates whether the platform information for a public transport line should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="equipment">
				<xs:annotation>
					<xs:documentation>Short value: "eq". Indicates whether equipment at the maneuver should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="lane">
				<xs:annotation>
					<xs:documentation>Short value: "la". Indicates whether lane information should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="roadName">
				<xs:annotation>
					<xs:documentation>Short value: "rn". Indicates whether the road name should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="nextRoadName">
				<xs:annotation>
					<xs:documentation>Short value: "nr". Indicates whether the name of the next road shall be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="roadNumber">
				<xs:annotation>
					<xs:documentation>Short value: "ru". Indicates whether the road number should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="nextRoadNumber">
				<xs:annotation>
					<xs:documentation>Short value: "nu". Indicates whether the number of the next road should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="roadTemplate">
				<xs:annotation>
					<xs:documentation>Short value: "rt". Indicates whether the template for route display should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="signPost">
				<xs:annotation>
					<xs:documentation>Short value: "sp". Indicates whether the sign post information should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="notes">
				<xs:annotation>
					<xs:documentation>Short value: "no". Indicates whether additional notes should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="action">
				<xs:annotation>
					<xs:documentation>Short value: "ac". Indicates whether actions should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="direction">
				<xs:annotation>
					<xs:documentation>Short value: "di". Indicates whether directions should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="nextManeuver">
				<xs:annotation>
					<xs:documentation>Short value: "nm". Indicates whether a reference to the next maneuver should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="freewayExit">
				<xs:annotation>
					<xs:documentation>Short value: "fe". Indicates whether the freeway exit should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="freewayJunction">
				<xs:annotation>
					<xs:documentation>Short value: "fj". Indicates whether the freeway junction should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="baseTime">
				<xs:annotation>
					<xs:documentation>Short value: "bt": Indicates whether the BaseTime information should be included in the maneuvers. By default, BaseTime information is not included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="trafficTime">
				<xs:annotation>
					<xs:documentation>Short value: "tm": Indicates whether the TrafficTime information should be included in the maneuvers. By default, TrafficTime information is not included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="indices">
				<xs:annotation>
					<xs:documentation>Short value: "ix": Indicates whether shape index information (FirstPoint, LastPoint) should be included in the maneuvers instead of copying shape points to the maneuver.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="boundingBox">
				<xs:annotation>
					<xs:documentation>Short value: "bb". Indicates whether the bounding box of the maneuver shall be provided.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="compressedShapes">
				<xs:annotation>
					<xs:documentation>Short value: "sz": Indicates whether compressed shape information should be included in the maneuvers. Shape compression may considerably reduce the amount of data transferred.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="roadShield">
				<xs:annotation>
					<xs:documentation>Short value: "rs": Indicates whether road shield information should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="startAngle">
				<xs:annotation>
					<xs:documentation>Short value: "sa": Indicates whether the start angle should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="waitTime">
				<xs:annotation>
					<xs:documentation>Short value: "wt": Indicates whether wait time information should be included in public transport maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="shapeQuality">
				<xs:annotation>
					<xs:documentation>Short value: "sq": Indicates whether shape quality should be included in maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="publicTransportTickets">
				<xs:annotation>
					<xs:documentation>Short value: "tx": Indicates whether information about the public transport tickets should be included in the maneuvers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="publicTransportDelays">
				<xs:annotation>
					<xs:documentation>Short value: "td": Indicates whether the delay information should be included in the maneuvers. If there is no delay, i.e it is equal to zero, or the real time information is missing, no delay information is displayed.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RouteLinkAttributeType">
		<xs:annotation>
			<xs:documentation>In many use cases, not all link attributes are required at once. To be able to specify which part of the link shall be returned by services, the enumeration type &lt;b&gt;RouteLinkAttributes &lt;/b&gt;defines switches for maneuver attribute inclusion and exclusion.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="shape">
				<xs:annotation>
					<xs:documentation>Short value: "sh". Indicates whether the link should include its geometry</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="length">
				<xs:annotation>
					<xs:documentation>Short value: "le". Indicates whether the link should include its length</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="speedLimit">
				<xs:annotation>
					<xs:documentation>Short value: "sl". Indicates whether the link should include SpeedLimit</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="dynamicSpeedInfo">
				<xs:annotation>
					<xs:documentation>Short value: "ds". Indicates whether the link should include dynamic speed information</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="incidents">
				<xs:annotation>
					<xs:documentation>Short value: "ic". Indicates whether the link should include incidents</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="truckRestrictions">
				<xs:annotation>
					<xs:documentation>Short value: "tr". Indicates whether the link should include truck restrictions</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="externalResources">
				<xs:annotation>
					<xs:documentation>Short value: "er". Indicates whether the link should include external resources</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="flags">
				<xs:annotation>
					<xs:documentation>Short value: "fl". Indicates whether the link should include link flags</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="address">
				<xs:annotation>
					<xs:documentation>Short value: "ad". Indicates whether the link should include the link's address</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="roadNumber">
				<xs:annotation>
					<xs:documentation>Short value: "rn". Indicates whether the link should include the link's road number</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="roadName">
				<xs:annotation>
					<xs:documentation>Short value: "ro". Indicates whether the link should include the link's road number</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="freewayExit">
				<xs:annotation>
					<xs:documentation>Short value: "fe". Indicates whether the link should include the name of the freeway exit</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="freewayJunction">
				<xs:annotation>
					<xs:documentation>Short value: "fj". Indicates whether the link should include the name of the freeway junction</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="timezone">
				<xs:annotation>
					<xs:documentation>Short value: "tz". Indicates whether the link should include the timezone</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="corridorLevel">
				<xs:annotation>
					<xs:documentation>Short value: "cl". Indicates whether the link should include the corridor level</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="nextLink">
				<xs:annotation>
					<xs:documentation>Short value: "nl". Indicates whether the link should include the link which will be next when following the route</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="stubs">
				<xs:annotation>
					<xs:documentation>Short value: "st". Indicates whether the link should include the corridor stubs</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="publicTransportLine">
				<xs:annotation>
					<xs:documentation>Short value: "pt". Indicates whether the link should include information about the public transport line.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TMCCodes">
				<xs:annotation>
					<xs:documentation>Short value: "tm". Indicates whether the link should include information about the covered TMC Codes.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="jamFactor">
				<xs:annotation>
					<xs:documentation>Short value: "jf". Indicates whether the link's dynamic speed info should include information about the jam factor.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="jamFactorTrend">
				<xs:annotation>
					<xs:documentation>Short value: "jt". Indicates whether the link's dynamic speed info should include information about the jam factor trend.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="confidence">
				<xs:annotation>
					<xs:documentation>Short value: "co". Indicates whether the link's dynamic speed info should include information about the level of confidence wrt. traffic information.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="remainTime">
				<xs:annotation>
					<xs:documentation>Short value: "rt". Indicates whether the link should include information about the remaining time until the destination is reached.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="remainDistance">
				<xs:annotation>
					<xs:documentation>Short value: "rd". Indicates whether the link should include information about the remaining distance until the destination is reached.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="maneuver">
				<xs:annotation>
					<xs:documentation>Short value: "ma". Indicates whether the link should include information about the associated maneuver.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="functionalClass">
				<xs:annotation>
					<xs:documentation>Short value: "fc". Indicates whether the link should include information about the functional class.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="nextStopName">
				<xs:annotation>
					<xs:documentation>Short value: "ns". Indicates whether the link should include information about the next stop.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="additionalData">
				<xs:annotation>
					<xs:documentation>Short value: "dd". Indicates whether the link should include the container for additional data.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="speedCategory">
				<xs:annotation>
					<xs:documentation>Short value: "sc". Indicates whether the link should include speed category information.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="successors">
				<xs:annotation>
					<xs:documentation>Short value: "su". Indicates whether the link should include successor link ID information.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="predecessors">
				<xs:annotation>
					<xs:documentation>Short value: "pr". Indicates whether the link should include predecessor link ID information.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="indices">
				<xs:annotation>
					<xs:documentation>Short value: "ix": Indicates whether shape index information (FirstPoint, LastPoint) should be included in the links instead of copying shape points to the link.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="compressedShapes">
				<xs:annotation>
					<xs:documentation>Short value: "sz": Indicates whether compressed shape information should be included in links. Shape compression may considerably reduce the amount of data transferred.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="consumption">
				<xs:annotation>
					<xs:documentation>Short value: "cn": Indicates whether the link should include information on fuel or energy consumption.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="timeDependentRestriction">
				<xs:annotation>
					<xs:documentation>Short value: "ti": Indicates whether the link should include information on time dependent restrictions.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="InstructionFormatType">
		<xs:annotation>
			<xs:documentation>Representation formats for instruction texts.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="text"/>
			<xs:enumeration value="html"/>
			<xs:enumeration value="native"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="RouteRequestMetaInfoType">
		<xs:annotation>
			<xs:documentation>Request parameters which are not specific to the routing request</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RequestId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Clients may pass in arbitrary values to trace request processing through the system. The RequestId will be mirrored in the MetaInfo element of the response structure.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VerboseMode" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Level of verbose information which will be included in the response structure. Can be a value between 0 and 5.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RouteResponseMetaInfoType">
		<xs:annotation>
			<xs:documentation>Meta information which is not directly related to the route calculation is wrapped within a separate element.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RequestId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Mirrored RequestId value from the request structure. Can be used to trace back requests.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Time at which the route calculation was performed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NextPageHandle" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The next page handle allows to identify the next portion that will be loaded in a paging scenario.&#xA;&lt;i&gt;Note: not yet supported&lt;/i&gt;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdditionalData" type="common:KeyValuePairType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Generic key/value container to keep additional attributes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MapVersion" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Version of the underlying map</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ModuleVersion" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Version of the module which performed the route calculation</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InterfaceVersion" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Version of the used schema definition. This information is required since representation formats other than XML do not have a concept like namespaces.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AvailableMapVersion" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Available map version. This information is needed when multiple maps are present in single server.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SupportedMapVersion" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Supported version of client map.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PublicTransportProfileType">
		<xs:annotation>
			<xs:documentation>Defines settings relevant for public transport routing.&#xA;&lt;i&gt;Note: not yet supported&lt;/i&gt;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MaxNumberOfChanges" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Maximal number of transit changes</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MinDurationForChange" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Minimal duration that is needed to change from one transport line to the next. This value overrides the default settings applied in the routing engine. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AvoidTransportTypes" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Public transport types that shall not be included in the response route. Please refer to PublicTransportType for a list of supported values.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="PublicTransportTypeType"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PreferredTransportTypes" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows customers to travel with preferred transport types (transit modes). Please refer to PublicTransportType for a list of supported values. This parameter cannot be used in combination with "AvoidTransportTypes".</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="PublicTransportTypeType"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SystemId" type="common:TransitSystemIdType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allow customers to limit the routes to one System only, using the SystemId.  The SystemId can be obtained from the DiCi database or using the GetProviderInformation service.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Walkspeed" type="common:SpeedType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allow to adjust walking speed used for connections in meters per second. Default: 1.25</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WalkTimeMultiplier" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to prefer or avoid public transport routes with longer walking distances. A value &gt; 1.0 means a slower walking speed and will prefer routes with less walking distance.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxWalkDistance" type="common:DistanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to limit the maximum walking distance for the entire route</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BeforeDepart" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This allows specifying how many trips before the specified departure time should be returned. This parameter defaults to 1, and can be set between 1 and 4. To be used in combination with "departure"</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AfterDepart" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This allows specifying how many trips after the specified departure time should be returned. This parameter defaults to 0, and can be set between 1 and 4.To be used in combination with "departure"</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BeforeArrival" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This allows specifying how many trips before the specified arrival time should be returned. This parameter defaults to 1,To be used in combination with "arrival"</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AfterArrival" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This allows specifying how many trips after the specified arrival time should be returned. This parameter defaults to 0, and can be set between 1 and 4.To be used in combination with "arrival</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimeBefore" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>TimeBefore limits alternative routes to be returned with departure time more than "timeBefore" minutes before the departureTime.  If not specified no limit is applied. Only to be used in combination with "departure".</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimeAfter" type="common:DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>TimeAfter limits alternative routes to be returned with arrival time more than "timeAfter" minutes after the arrival Time.  If not specified no limit is applied.Only to be used in combination with "arrival"</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CombineChange" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>CombineChange controls whether to combine subsequent "leave" and "enter" maneuvers for a single stop into a one change maneuver. By default "leave" and "enter" maneuvers are provided seperately</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CollapseDepartArriveManeuvers" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>if this flag is set to true in requests for public transport routes,
					and the specified departure (or arrival) waypoint is close to the first (or last)
					public transport stop the first (or last) maneuver will use the departStation
					(or arriveStation) action for public transport maneuvers and the first (or last)
					walk maneuver will be suppressed.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NavigationWaypointParameterType">
		<xs:annotation>
			<xs:documentation>The NavigationWaypointParameter is used to define a waypoint based on navigational information like link positions. A common use case for this scenario is when the user specifies a waypoint by selecting a place or a location after having executed a search.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="WaypointParameterType">
				<xs:sequence>
					<xs:element name="DisplayPosition" type="common:GeoCoordinateType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>be displayed on a map. It usually denotes the center of the location and is not navigable, i.e. it is not located on a link in the routing network in contrast to the navigation positions of a location. The display position allows the routing engine to decide whether the waypoint is located on the left or on the right-hand side of the route.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice>
						<xs:element name="StreetPosition" type="StreetPositionType" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>List of navigation positions of the waypoint represented by a coordinate and a street name. As there might be multiple ways to reach a waypoint (e.g. an airport with different entries and exits) the user can pass a list of navigation positions.
The street positions should only be used if no link information is available; LinkPositions are the preferred way to identify navigation positions as they are more exact than a coordinate. It is not allowed to mix street positions and link positions in one waypoint parameter.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LinkPosition" type="LinkPositionType" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>List of navigation positions of the waypoint represented by a position on a route link. As there might be multiple ways to reach a waypoint (e.g. an airport with different entries and exits) the user can pass a list of navigation positions.
Compared to street positions link positions are the preferred way to identify navigation positions as they are more exact than a coordinate. It is not allowed to mix street positions and link positions in one waypoint parameter.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="StreetPositionType">
		<xs:annotation>
			<xs:documentation>A StreetPosition is used to define a navigation position based on a coordinate and a streetname. The streetname helps chosing the right road in complex intersection scenarios (e.g. a bridge crossing another road).
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Position" type="common:GeoCoordinateType">
				<xs:annotation>
					<xs:documentation>Coordinate identifying the street position</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StreetName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of the street the street position is located. This name allows to distinguish two streets crossing in one coordinate, potentially separated by a bridge/tunnel. The streetname might contain the road name or the road number (if no road name is available).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LinkPositionType">
		<xs:annotation>
			<xs:documentation>The LinkPosition is used to define an accurate position on a link.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LinkId" type="common:LinkIdType">
				<xs:annotation>
					<xs:documentation>LinkId of the link position</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Spot" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Relative position of the location along the link. Spot is defined as the fractional distance from the link's reference-node to the non-reference node, i.e. the value range is between 0 and 1. This attribute is only relevant if a link is referenced.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SideOfStreet" type="common:SideOfStreetType">
				<xs:annotation>
					<xs:documentation>Indicates whether the waypoint is on the left or right side of the link (if heading from the reference node to the non-reference node).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PublicTransportWaypointParameterType">
		<xs:annotation>
			<xs:documentation>The PublicTransportWaypointParameter is used to define a waypoint based on a Discover Cities StopId.  </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="WaypointParameterType">
				<xs:sequence>
					<xs:element name="StopId" type="common:TransitStopIdType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Id identifying the stop based on DiCi data</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="WaypointParameterTypeType">
		<xs:annotation>
			<xs:documentation>The type of a waypoint parameter. This type influences how the routing engine integrates the waypoint into the resulting route.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="stopOver">
				<xs:annotation>
					<xs:documentation>Identifies a stopover waypoint. At a stopover 180 degree turns are allowed to continue on the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="passThrough">
				<xs:annotation>
					<xs:documentation>Identifies a pass-through waypoint. At a pass-through waypoint the route is not expected to support a break therefore no 180 degree turns are allowed. Waypoints defined through a drag-n-drop action should be marked as pass-through.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="WaypointParameterSourceType">
		<xs:annotation>
			<xs:documentation>Defines if the waypoint was specified by the user or added by the route calculation.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="user">
				<xs:annotation>
					<xs:documentation>Waypoint was specified by the user.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="system">
				<xs:annotation>
					<xs:documentation>Waypoint was added during route calculation. For example, a charging station waypoint may be added to ensure that an electric vehicle can reach its destination</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="WaypointParameterEntityTypeType">
		<xs:annotation>
			<xs:documentation>The entity type of a waypoint parameter. The entity type influences maneuver generation for arrivals at special locations such as airports or intersections</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="airport">
				<xs:annotation>
					<xs:documentation>Short form "ap". A waypoint entity type denoting an airport</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="intersection">
				<xs:annotation>
					<xs:documentation>Short form "in". A waypoint entity type denoting an intersection of two streets. The EntityDetails element in the corresponding Waypoint instance should contain the names of the intersecting streets seperated by an ampersand sign. Note that the ampersand needs to be properly URL encoded.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="fullAddress">
				<xs:annotation>
					<xs:documentation>Short form "fa". A waypoint entity type denoting a full address. The EntityDetails element in the corresponding Waypoint instance must contain the encodeded details about the intersection.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="NavigationFlagType">
		<xs:annotation>
			<xs:documentation>Identifiers for navigation information relevant for a link.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="baseRoute"/>
			<xs:enumeration value="complexIntersection"/>
			<xs:enumeration value="freewayIntersection"/>
			<xs:enumeration value="oneWay"/>
			<xs:enumeration value="roundabout"/>
			<xs:enumeration value="fork"/>
			<xs:enumeration value="motorway"/>
			<xs:enumeration value="tunnel"/>
			<xs:enumeration value="slipRoad"/>
			<xs:enumeration value="boatFerry"/>
			<xs:enumeration value="railFerry"/>
			<xs:enumeration value="start"/>
			<xs:enumeration value="destination"/>
			<xs:enumeration value="speedWarning"/>
			<xs:enumeration value="frontier"/>
			<xs:enumeration value="motorwayEntry"/>
			<xs:enumeration value="motorwayChange"/>
			<xs:enumeration value="motorwayExit"/>
			<xs:enumeration value="connected"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TrafficDirectionType">
		<xs:annotation>
			<xs:documentation>Distinguishes between left- and right-hand traffic.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="leftHand"/>
			<xs:enumeration value="rightHand"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="IntersectionTypeType">
		<xs:annotation>
			<xs:documentation>Defines identifiers for different intersection types.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="intersection"/>
			<xs:enumeration value="roundabout"/>
			<xs:enumeration value="fork"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="IntersectionLegRoleType">
		<xs:annotation>
			<xs:documentation>Defines identifiers for different roles of an intersection legs in a route.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="entry"/>
			<xs:enumeration value="exit"/>
			<xs:enumeration value="stub"/>
			<xs:enumeration value="noExit"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="IntersectionIconType">
		<xs:annotation>
			<xs:documentation>Simplified representation of an intersection icon.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Type" type="IntersectionTypeType">
				<xs:annotation>
					<xs:documentation>Type of the intersection (e.g. roundabout, fork).  Please refer to the enumeration type &lt;b&gt;IntersectionTypeType &lt;/b&gt;for supported values.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TrafficDirection" type="TrafficDirectionType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines if the traffic is left- or right-handed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Leg" type="IntersectionLegType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of inbound and outbound legs that form the intersection.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IntersectionLegType">
		<xs:annotation>
			<xs:documentation>Simplified representation of a leg in an intersection.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Index" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation>The index of the leg as defined in the reference icons for each intersection icon type.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Angle" type="common:AngleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The angle of the leg relative to the entry leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DisplayAngle" type="common:AngleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The angle of the leg relative to the entry leg optimized for display purpose.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Role" type="IntersectionLegRoleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Role of the leg in the current route (e.g. entry, exit). Please refer to the enumeration type &lt;b&gt;IntersectionLegRoleType &lt;/b&gt;for supported values.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinkId" type="common:LinkIdType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifier of the link that covers the leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="SourceSupplierNoteTypeType">
		<xs:annotation>
			<xs:documentation>Defines types of source supplier notes.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="ticketPurchase">
				<xs:annotation>
					<xs:documentation>Note containing ticket purchase information for public transport data providers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="disclaimer">
				<xs:annotation>
					<xs:documentation>Note containing disclaimer information for public transport data providers.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="SourceSupplierNoteType">
		<xs:annotation>
			<xs:documentation>
				Note containing additional information about source data supplier.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Type" type="SourceSupplierNoteTypeType">
				<xs:annotation>
					<xs:documentation>Type of source supplier note.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Text" type="xs:string">
				<xs:annotation>
					<xs:documentation>Ready-to-display note text. The text may contain HTML text and markup, including hyperlinks (i.e. &lt;a href&gt; elements). The text will be localized.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Href" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>URL, to which note is referring, if any.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HrefText" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Text, displayed with URL, to which note is referring, if any.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="SourceSupplierType">
		<xs:annotation>
			<xs:documentation>Structured information about source data supplier.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Title" type="xs:string">
				<xs:annotation>
					<xs:documentation>Source data supplier title.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Href" type="xs:string">
				<xs:annotation>
					<xs:documentation>Link to source data supplier's website.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Note" type="SourceSupplierNoteType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Notes giving additional information about the supplier.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SourceAttributionType">
		<xs:annotation>
			<xs:documentation>Routing data source attribution information.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Attribution" type="xs:string">
				<xs:annotation>
					<xs:documentation>Ready-to-display attribution string.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Supplier" type="SourceSupplierType"
				minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Structured information about source data
						suppliers.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConsumptionModelOptionsType">
		<xs:annotation>
			<xs:documentation>Contains options related to consumption model type.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ConsumptionModel" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of the model used for calculating consumption.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="RoutingZoneType">
		<xs:annotation>
			<xs:documentation>Describes a routing zone crossed by the route.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Id" type="xs:unsignedLong">
				<xs:annotation>
					<xs:documentation>Unique and persistent identifier of the routing zone.</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of the routing zone.</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:element name="Type" type="RoutingZoneTypeType">
				<xs:annotation>
					<xs:documentation>Type of the routing zone.</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:element name="ShapeIndices" type="RouteShapeReferenceType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of references to the route sections which are in the routing zone.</xs:documentation>
				</xs:annotation>
			</xs:element>

 			<xs:element name="Restriction" type="VehicleRestrictionType" minOccurs="0" maxOccurs="unbounded">
 				<xs:annotation>
 					<xs:documentation>List of vehicle restrictions that apply in the routing zone.</xs:documentation>
 				</xs:annotation>
 			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="RoutingZoneTypeType">
		<xs:annotation>
			<xs:documentation>Type of the routing zone.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="vignette">
				<xs:annotation>
					<xs:documentation>A zone where a vignette is required to use affiliated roads.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="congestionPricing">
				<xs:annotation>
					<xs:documentation>A zone of roads where a congestion pricing system applies.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="adminClass">
				<xs:annotation>
					<xs:documentation>A zone of roads with a specific administrative class specified by official transport regulations (often country specific).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="environmental">
				<xs:annotation>
					<xs:documentation>A zone defined based upon specific environmental criteria.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="VehicleRestrictionType">
	    <xs:annotation>
		    <xs:documentation>
		        Vehicle's restriction type describing road or zone access restrictions applicable to vehicles of a specific profile. The restriction applies only when all its attributes match the vehicle profile and time.
		    </xs:documentation>
	    </xs:annotation>
		<xs:sequence>
			<xs:element name="ValidityPeriod" type="common:RecurringTimeIntervalsCombinationType" minOccurs="0">
                <xs:annotation><xs:documentation>Recurring time intervals at which the restriction applies.</xs:documentation></xs:annotation>
            </xs:element>
			<xs:element name="LicensePlatePattern" type="LicensePlatePatternType" minOccurs="0">
                <xs:annotation><xs:documentation>A schema of a license plate number. The restriction applies only to vehicles matching the license plate pattern.</xs:documentation></xs:annotation>
            </xs:element>
		</xs:sequence>
	</xs:complexType>

    <xs:simpleType name="LicensePlatePatternType">
	    <xs:annotation>
		    <xs:documentation>
			    Vehicle's license plate pattern in a form of regular expression. Example, license plates ending with an odd number: [13579]$
		    </xs:documentation>
	    </xs:annotation>
	        <xs:restriction base="xs:string">
	    </xs:restriction>
    </xs:simpleType>

	<xs:complexType name="RouteShapeReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to the route section defined by the first and last shape point index of the route.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FirstPoint" type="xs:int">
				<xs:annotation><xs:documentation>Index of the first shape point.</xs:documentation></xs:annotation>
			</xs:element>
			<xs:element name="LastPoint" type="xs:int">
				<xs:annotation><xs:documentation>Index of the last shape point.</xs:documentation></xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="TurnType">
		<xs:annotation>
			<xs:documentation>Type of the turn.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="difficult">
				<xs:annotation>
					<xs:documentation>A potentially difficult sharp turn of turning radius that might be too short for certain vehicles.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="SpeedProfileType">
		<xs:annotation>
			<xs:documentation>Defines speed profile variant for given routing mode.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="default">
				<xs:annotation>
					<xs:documentation>Default speed profile.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="fast">
				<xs:annotation>
					<xs:documentation>Speed profile faster than default.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="LicensePlateType">
		<xs:annotation>
			<xs:documentation>Defines vehicle's license plate.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LicensePlateSegment" type="LicensePlateSegmentType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="LicensePlateSegmentType">
		<xs:annotation>
			<xs:documentation>Defines vehicle's license plate segment.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LicensePlateSegmentDataType" type="LicensePlateSegmentDataTypeType">
				<xs:annotation>
					<xs:documentation>Type of the license plate segment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LicensePlateSegmentData" type="xs:string">
				<xs:annotation>
					<xs:documentation>Data of the license plate segment.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="LicensePlateSegmentDataTypeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="lastcharacter">
				<xs:annotation>
					<xs:documentation>The last character of the license plate.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TimeDependentRestrictionTypeType" >
		<xs:restriction base="xs:string">
			<xs:enumeration value="turnRestriction">
				<xs:annotation>
					<xs:documentation>Periodical restriction which applies only in case of passing exact sequence of links.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="closure">
				<xs:annotation>
					<xs:documentation>Periodical closure which applies on individual links.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="TimeDependentRestrictionType">
		<xs:annotation>
			<xs:documentation>Defines time dependent restriction. Defined as validity period and restriction type.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ValidityPeriod" type="common:RecurringTimeIntervalsCombinationType" />
			<xs:element name="Type" type="TimeDependentRestrictionTypeType" />
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="BatteryChargeType">
		<xs:annotation>
			<xs:documentation>Battery charge in kWh.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:double"/>
	</xs:simpleType>
</xs:schema>